<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- component-scan 설정-->
    <context:component-scan base-package="egovframework">
       <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
	
	<!-- 국제화 Message 설정 --><!-- 프로퍼티 파일 위치 설정 -->
	<bean id="messageSource" class="egovframework.com.cmm.util.EgovWildcardReloadableResourceBundleMessageSource">
		<property name="egovBasenames">
			<list>
				<value>classpath*:egovframework/message/com/**/*</value>
				<value>classpath:/egovframework/rte/fdl/idgnr/messages/idgnr</value>
				<value>classpath:/egovframework/rte/fdl/property/messages/properties</value>
				<value>classpath:/egovframework/egovProps/globals</value>
			</list>
		</property>
		 
		<property name="cacheSeconds">
			<value>60</value>
		</property>
	</bean>

	<!-- applicationContextProvider DI 안되는 빈에서 컨텍스트 구할때 사용 -->			
	<bean id="applicationContextProvider" class="egovframework.com.asapro.support.ApplicationContextProvider" />
	
	<!-- 메시지소스빈 설정 -->
    <bean id="egovMessageSource" class="egovframework.com.cmm.EgovMessageSource">
        <property name="reloadableResourceBundleMessageSource">
            <ref bean="messageSource" />
        </property>
    </bean>
    
	<!-- 실행환경에서 빈 이름 참조(AbstractServiceImpl) -->
	<!-- Exception 발생시 후처리용 별도작업을 위해 실행환경의 LeveaTrace를 활용하도록 설정 -->
	<bean id="leaveaTrace" class="egovframework.rte.fdl.cmmn.trace.LeaveaTrace">
		<property name="traceHandlerServices">
			<list>
				<ref bean="egov.traceHandlerService" />
			</list>
		</property>
	</bean>

	<!-- Exception 발생시 후처리용 별도작업을 위해 실행환경의 DefaultTrace Handle Manager 를 활용하도록 설정 -->
	<bean id="egov.traceHandlerService" class="egovframework.rte.fdl.cmmn.trace.manager.DefaultTraceHandleManager">
		<property name="reqExpMatcher">
			<ref bean="egov.antPathMater" />
		</property>
		<property name="patterns">
			<list>
				<value>*</value>
			</list>
		</property>
		<property name="handlers">
			<list>
				<ref bean="egov.defaultTraceHandler" />
			</list>
		</property>
	</bean>

	<!-- Exception 발생시 후처리용 별도작업을 위해 실행환경의  AntPathMatcher 를 활용하도록 설정 -->
	<bean id="egov.antPathMater" class="org.springframework.util.AntPathMatcher" />

	<!-- Exception 발생시 후처리용 별도작업을 위해 실행환경의  DefaultTraceHandler 를 활용하도록 설정 egovframework.rte.fdl.cmmn.trace.handler.DefaultTraceHandler -->
	<bean id="egov.defaultTraceHandler" class="egovframework.rte.fdl.cmmn.trace.handler.DefaultTraceHandler" />


    <!-- MULTIPART RESOLVERS -->
    <!-- regular spring resolver -->
    <bean id="spring.RegularCommonsMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="600000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>

    <!-- custom multi file resolver -->
    <bean id="local.MultiCommonsMultipartResolver" class="egovframework.com.cmm.web.EgovMultipartResolver">
        <property name="maxUploadSize" value="100000000" />
        <property name="maxInMemorySize" value="100000000" />
    </bean>

    <!-- choose one from above and alias it to the name Spring expects -->
    <!-- alias name="local.MultiCommonsMultipartResolver" alias="multipartResolver" /-->
    <alias name="spring.RegularCommonsMultipartResolver" alias="multipartResolver" />
    
    
    <!-- restTemplate -->
    <!-- 컴포넌트 내부에서 URL을 요청 -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="errorHandler" ref="restTemplateResponseErrorHandler" />
	</bean>
	<bean id="restTemplateResponseErrorHandler" class="egovframework.com.asapro.support.handler.RestTemplateResponseErrorHandler"/>

	<!-- spring thread pool -->
	<!--  
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="waitForTasksToCompleteOnShutdown" value="true" />
	</bean> -->
	
	<!-- Spring Task -->
	<task:scheduler id="taskScheduler" pool-size="20"/>
	<task:annotation-driven scheduler="taskScheduler"/>
	
</beans>
