<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.asapro.member.admin.service.AdminMemberMapper">
	
	<resultMap id="adminMemberPlainResultMap" type="AdminMember">
		<id column="ADMIN_ID" property="adminId" javaType="String" />
		<result column="ADMIN_PASSWORD" property="adminPassword" javaType="String" />
		<result column="ADMIN_NAME" property="adminName" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_SEX" property="adminSex" javaType="String" />
		<result column="ADMIN_EMAIL" property="adminEmail" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_TEL1" property="adminTel1" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_TEL2" property="adminTel2" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_TEL3" property="adminTel3" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_MOBILE1" property="adminMobile1" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_MOBILE2" property="adminMobile2" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_MOBILE3" property="adminMobile3" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_FAX" property="adminFax" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_ZIPCODE" property="adminZipcode" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_ADDRESS" property="adminAddress" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_ADDRESS_DETAIL" property="adminAddressDetail" javaType="String" jdbcType="VARCHAR" typeHandler="CryptoStringTypeHandler" />
		<result column="ADMIN_REGDATE" property="adminRegdate" javaType="Date" />
		<result column="ADMIN_ACTIVE" property="adminActive" javaType="Boolean" />
		<result column="ADMIN_LOGIN_LAST_DATE" property="adminLoginLastDate" javaType="Date" />
		<result column="ADMIN_PW_LAST_UPDATE" property="adminPWLastUpdated" javaType="Date" />
		<result column="ADMIN_ORGANIZATION" property="adminOrganization" javaType="String" />
		<result column="ADMIN_DEPARTMENT" property="adminDepartment" javaType="String" />
		<result column="ADMIN_TEAM" property="adminTeam" javaType="String" />
		<result column="ADMIN_POSITION" property="adminPosition" javaType="String" />
		<result column="ADMIN_MANAGEMENT_LEVEL" property="adminManagementLevel" javaType="Integer" />
		<result column="ADMIN_ROLE" property="adminRole.roleCode" javaType="String" />
		<result column="ADMIN_LOCK" property="adminLock" javaType="Boolean" />
	</resultMap>
		
	<resultMap id="adminMemberComplexResultMap" type="AdminMember" extends="adminMemberPlainResultMap">
		<association property="organization" column="{orgId=ADMIN_ORGANIZATION}" javaType="Organization" select="egovframework.com.asapro.organization.service.OrganizationMapper.selectOrganization"/>
		<association property="department" column="{depId=ADMIN_DEPARTMENT}" javaType="Department" select="egovframework.com.asapro.organization.service.OrganizationMapper.selectDepartment"/>
		<!-- <association property="team" column="{teamId=ADMIN_TEAM}" javaType="Team" select="egovframework.com.asapro.organization.service.OrganizationMapper.selectTeam"/> -->
		<association property="adminRole" column="ADMIN_ROLE" javaType="Role" resultMap="egovframework.com.asapro.role.service.RoleMapper.rolePlainResultMap" />
		<collection property="adminRoleList" column="{roleCodeTmp=ROLE_CODE}" ofType="Role" javaType="ArrayList" select="egovframework.com.asapro.role.service.RoleMapper.selectRoleList" />
		<collection property="adminSiteRoleRelList" column="ADMIN_ID" ofType="AdminSiteRoleRel" javaType="ArrayList" select="selectAdminSiteRoleRelationList" />
		
<!-- 		<association column="MEM_ROLE" property="memberRole" javaType="Role">
			<id column="ROLE_CODE" property="roleCode" javaType="String" />
			<result column="ROLE_NAME" property="roleName" javaType="String" />
			<result column="ROLE_DESCRIPTION" property="roleDescription" javaType="String" />
			<result column="ROLE_REGDATE" property="roleRegDate" javaType="Date" />
			<result column="ROLE_DEFAULT" property="roleDefault" javaType="Boolean" />
			<result column="ROLE_ADMIN" property="roleAdmin" javaType="Boolean" />
		</association>
		<collection property="groups" column="MEM_ID" ofType="Group" javaType="ArrayList" select="selectMemberGroupList" />
 -->
	</resultMap>
	
	<resultMap id="adminSiteRoleRelPlainResultMap" type="AdminSiteRoleRel">
		<id column="ADMIN_ID" property="adminId" javaType="String" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
		<result column="ROLE_CODE" property="roleCode" javaType="String" />
	</resultMap>
	
	<sql id="adminMemberColumns">
		ADMIN_ID
		, ADMIN_PASSWORD
		, ADMIN_NAME
		, ADMIN_SEX
		, ADMIN_EMAIL
		, ADMIN_TEL1
		, ADMIN_TEL2
		, ADMIN_TEL3
		, ADMIN_MOBILE1
		, ADMIN_MOBILE2
		, ADMIN_MOBILE3
		, ADMIN_FAX
		, ADMIN_ZIPCODE
		, ADMIN_ADDRESS
		, ADMIN_ADDRESS_DETAIL
		, ADMIN_REGDATE
		, ADMIN_ACTIVE
		, ADMIN_LOGIN_LAST_DATE
		, ADMIN_PW_LAST_UPDATE
		, ADMIN_ORGANIZATION
		, ADMIN_DEPARTMENT
		, ADMIN_TEAM
		, ADMIN_POSITION
		, ADMIN_MANAGEMENT_LEVEL
		, ADMIN_ROLE
		, ADMIN_LOCK
	</sql>
	
	<sql id="adminMemberJoinColumns">
		ADM.ADMIN_ID
		, ADM.ADMIN_PASSWORD
		, ADM.ADMIN_NAME
		, ADM.ADMIN_SEX
		, ADM.ADMIN_EMAIL
		, ADM.ADMIN_TEL1
		, ADM.ADMIN_TEL2
		, ADM.ADMIN_TEL3
		, ADM.ADMIN_MOBILE1
		, ADM.ADMIN_MOBILE2
		, ADM.ADMIN_MOBILE3
		, ADM.ADMIN_FAX
		, ADM.ADMIN_ZIPCODE
		, ADM.ADMIN_ADDRESS
		, ADM.ADMIN_ADDRESS_DETAIL
		, ADM.ADMIN_REGDATE
		, ADM.ADMIN_ACTIVE
		, ADM.ADMIN_LOGIN_LAST_DATE
		, ADM.ADMIN_PW_LAST_UPDATE
		, ADM.ADMIN_ORGANIZATION
		, ADM.ADMIN_DEPARTMENT
		, ADM.ADMIN_TEAM
		, ADM.ADMIN_POSITION
		, ADM.ADMIN_MANAGEMENT_LEVEL
		, ADM.ADMIN_ROLE
		, ADM.ADMIN_LOCK
	</sql>
	
	
	<insert id="insertAdminMember" parameterType="AdminMember">
		INSERT INTO ASA_ADMIN_MEMBER (
			<include refid="adminMemberColumns" />
		) VALUES (
			#{adminId}
			, #{adminPassword}
			, #{adminName, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminSex}
			, #{adminEmail, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminTel1, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminTel2, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminTel3, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminMobile1, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminMobile2, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminMobile3, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminFax, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminZipcode, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminAddress, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminAddressDetail, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, #{adminRegdate}
			, #{adminActive}
			, #{adminLoginLastDate}
			, #{adminPWLastUpdated}
			, #{adminOrganization}
			, #{adminDepartment}
			, #{adminTeam}
			, #{adminPosition}
			, #{adminManagementLevel}
			, #{adminRole.roleCode}
			, #{adminLock}
		)
	</insert>
	
	<select id="selectAdminMember" parameterType="AdminMember" resultMap="adminMemberComplexResultMap">
		SELECT 
			<include refid="adminMemberJoinColumns" />
			, ASR.ROLE_CODE
			<!-- , <include refid="egovframework.com.asapro.role.service.RoleMapper.roleJoinColumns"/> -->
		FROM ASA_ADMIN_MEMBER ADM
		LEFT OUTER JOIN (SELECT * FROM ASA_ADMIN_SITE_ROLE_REL WHERE SITE_PREFIX = #{sitePrefix}) ASR ON ADM.ADMIN_ID = ASR.ADMIN_ID
		<!-- LEFT OUTER JOIN ASA_ROLE ROL ON ASR.ROLE_CODE = ROL.ROLE_CODE -->
		<where>
			ADM.ADMIN_ID = #{adminId}
		</where> 
	</select>
	
	<select id="selectAdminMemberById" parameterType="String" resultMap="adminMemberPlainResultMap">
		SELECT 
			<include refid="adminMemberJoinColumns" />
		FROM ASA_ADMIN_MEMBER ADM
		<where>
			ADM.ADMIN_ID = #{value}
		</where> 
	</select>
	
	<select id="selectAdminMemberList" parameterType="AdminMemberSearch" resultMap="adminMemberComplexResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM (
		</if>
			SELECT 
				<include refid="adminMemberJoinColumns" />
				, ASR.ROLE_CODE
			<!-- 	, <include refid="egovframework.com.asapro.role.service.RoleMapper.roleJoinColumns"/> -->
			FROM ASA_ADMIN_MEMBER ADM
			LEFT JOIN ASA_ADMIN_SITE_ROLE_REL ASR ON ADM.ADMIN_ID = ASR.ADMIN_ID
				
			<!-- 
			LEFT OUTER JOIN (SELECT * FROM ASA_ADMIN_SITE_ROLE_REL WHERE SITE_PREFIX = #{sitePrefix}) ASR ON ADM.ADMIN_ID = ASR.ADMIN_ID
			LEFT OUTER JOIN ASA_ROLE ROL ON ASR.ROLE_CODE = ROL.ROLE_CODE
			 -->
			<!-- 
			<if test="groupId != null and groupId != ''">
			LEFT OUTER JOIN ASA_GROUP_MEMBER GM ON ADM.ADMIN_ID = GM.MEM_ID
			</if> -->
			<where>
				<if test="adminActive != null and adminActive != ''">
					<if test="adminActive == 'true'">
						AND ADM.ADMIN_ACTIVE = 1
					</if>
					<if test="adminActive == 'false'">
						AND ADM.ADMIN_ACTIVE = 0
					</if>
				</if>
				<if test="adminRoleCode != null and adminRoleCode != ''">
					AND (ASR.ROLE_CODE = #{adminRoleCode} OR ASR.ROLE_CODE LIKE '%'||#{adminRoleCode}||',%' OR ASR.ROLE_CODE LIKE '%,'||#{adminRoleCode}||'%' )
				</if>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							ADM.ADMIN_ID LIKE '%'||#{sv}||'%'
							OR ADM.ADMIN_NAME = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
							OR ADM.ADMIN_EMAIL = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'adminId'">
							AND ADM.ADMIN_ID LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'adminName'">
							AND ADM.ADMIN_NAME = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
						</if>
						<if test="sc == 'adminEmail'">
							AND ADM.ADMIN_EMAIL = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
						</if>	
					</if>
				</if>
				<!-- 
				<if test="groupId != null and groupId != ''">
					AND GM.GROUP_ID = #{groupId}
				</if> -->
				<if test="orgId != null and orgId != ''">
					AND ADM.ADMIN_ORGANIZATION = #{orgId}
				</if>
				<if test="depId != null and depId != ''">
					AND ADM.ADMIN_DEPARTMENT = #{depId}
				</if>
				<if test="teamId != null and teamId != ''">
					AND ADM.ADMIN_TEAM = #{teamId}
				</if>
				<![CDATA[ AND ADM.ADMIN_ID <> 'admin']]>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ADM.${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY ADM.ADMIN_REGDATE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectAdminMemberListTotal" parameterType="AdminMemberSearch" resultType="Integer">
		SELECT COUNT(*)
		FROM ASA_ADMIN_MEMBER ADM
		LEFT JOIN ASA_ADMIN_SITE_ROLE_REL ASR ON ADM.ADMIN_ID = ASR.ADMIN_ID
		
		<!-- 
		LEFT OUTER JOIN (SELECT * FROM ASA_ADMIN_SITE_ROLE_REL WHERE SITE_PREFIX = #{sitePrefix}) ASR ON ADM.ADMIN_ID = ASR.ADMIN_ID
		LEFT OUTER JOIN ASA_ROLE ROL ON ASR.ROLE_CODE = ROL.ROLE_CODE
		 -->
		<!-- 
		<if test="groupId != null and groupId != ''">
		LEFT OUTER JOIN ASA_GROUP_MEMBER GM ON ADM.ADMIN_ID = GM.MEM_ID
		</if> -->
		<where>
			<if test="adminActive != null and adminActive != ''">
				<if test="adminActive == 'true'">
					AND ADM.ADMIN_ACTIVE = 1
				</if>
				<if test="adminActive == 'false'">
					AND ADM.ADMIN_ACTIVE = 0
				</if>
			</if>
			<if test="adminRoleCode != null and adminRoleCode != ''">
				AND (ASR.ROLE_CODE = #{adminRoleCode} OR ASR.ROLE_CODE LIKE '%'||#{adminRoleCode}||',%' OR ASR.ROLE_CODE LIKE '%,'||#{adminRoleCode}||'%' )
			</if>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						ADM.ADMIN_ID LIKE '%'||#{sv}||'%'
						OR ADM.ADMIN_NAME = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
						OR ADM.ADMIN_EMAIL = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'adminId'">
						AND ADM.ADMIN_ID LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'adminName'">
						AND ADM.ADMIN_NAME = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
					</if>
					<if test="sc == 'adminEmail'">
						AND ADM.ADMIN_EMAIL = #{sv, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
					</if>	
				</if>
			</if>
			<!-- 
			<if test="groupId != null and groupId != ''">
				AND GM.GROUP_ID = #{groupId}
			</if> -->
			<if test="orgId != null and orgId != ''">
				AND ADM.ADMIN_ORGANIZATION = #{orgId}
			</if>
			<if test="depId != null and depId != ''">
				AND ADM.ADMIN_DEPARTMENT = #{depId}
			</if>
			<if test="teamId != null and teamId != ''">
				AND ADM.ADMIN_TEAM = #{teamId}
			</if>
			<![CDATA[ AND ADM.ADMIN_ID <> 'admin']]>
		</where>
	</select>
	
	<update id="updateAdminMember" parameterType="AdminMember">
		UPDATE ASA_ADMIN_MEMBER SET
			ADMIN_NAME					= #{adminName, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_SEX 				= #{adminSex}
			, ADMIN_EMAIL				= #{adminEmail, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_TEL1				= #{adminTel1, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_TEL2				= #{adminTel2, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_TEL3				= #{adminTel3, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_MOBILE1				= #{adminMobile1, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_MOBILE2				= #{adminMobile2, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_MOBILE3				= #{adminMobile3, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_FAX 				= #{adminFax, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_ZIPCODE 			= #{adminZipcode, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_ADDRESS 			= #{adminAddress, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_ADDRESS_DETAIL 		= #{adminAddressDetail, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			<!-- , ADMIN_ACTIVE				= #{adminActive} -->
			, ADMIN_ORGANIZATION 		= #{adminOrganization}
			, ADMIN_DEPARTMENT			= #{adminDepartment}
			, ADMIN_TEAM				= #{adminTeam}
			, ADMIN_POSITION 			= #{adminPosition}
			, ADMIN_MANAGEMENT_LEVEL	= #{adminManagementLevel}
			, ADMIN_ROLE				= #{adminRole.roleCode}
			<!-- , ADMIN_LOCK				= #{adminLock} -->
		<where>
			ADMIN_ID	=  #{adminId}
		</where>
	</update>
	
	<delete id="deleteAdminMember" parameterType="String">
		DELETE FROM ASA_ADMIN_MEMBER 
		<where>
			ADMIN_ID = #{value}
		</where>
	</delete>
	
	<update id="updateAdminMemberPassword" parameterType="AdminPassword">
		UPDATE ASA_ADMIN_MEMBER SET 
			ADMIN_PASSWORD = #{newPassword}
			, ADMIN_PW_LAST_UPDATE = #{adminPWLastUpdated} 
		<where>
			ADMIN_ID = #{adminId}
		</where>
	</update>
	
	<update id="updateAdminMemberLastLoginDate" parameterType="AdminMember">
		UPDATE ASA_ADMIN_MEMBER SET
			ADMIN_LOGIN_LAST_DATE = #{adminLoginLastDate}
		<where>
			ADMIN_ID = #{adminId}
		</where>
	</update>
	
	<!-- ================= 로그인시 체크 데이터 =================== -->
	<!-- ================= 로그인시 체크 데이터 =================== -->
	
	<select id="selectAdminMemberLock" parameterType="String" resultType="Boolean">
		SELECT
			ADMIN_LOCK
		FROM ASA_ADMIN_MEMBER 
		<where>
			ADMIN_ID = #{value}
		</where>
	</select>
	
	<update id="resetLoginFailInfo" parameterType="AdminMember">
		UPDATE ASA_ADMIN_MEMBER SET
			ADMIN_LOCK					= #{adminLock}
			, ADMIN_LOGIN_FAIL_COUNT		= #{adminLoginFailCount}
			, ADMIN_LOGIN_FAIL_DATE		= #{adminLoginFailDate}
		<where>
			ADMIN_ID = #{adminId}
		</where>
	</update>
	
	<update id="addLoginFailCount" parameterType="String">
		UPDATE ASA_ADMIN_MEMBER SET
			ADMIN_LOGIN_FAIL_COUNT		= ADMIN_LOGIN_FAIL_COUNT + 1
		<where>
			ADMIN_ID = #{value}
		</where>
	</update>
	
	<select id="selectLoginFailCount" parameterType="String" resultType="Integer">
		SELECT
			ADMIN_LOGIN_FAIL_COUNT
		FROM ASA_ADMIN_MEMBER 
		<where>
			ADMIN_ID = #{value}
		</where>
	</select>
	
	<update id="updateLockAndFailDate" parameterType="AdminMember">
		UPDATE ASA_ADMIN_MEMBER SET
			ADMIN_LOCK					= #{adminLock}
			, ADMIN_LOGIN_FAIL_DATE		= #{adminLoginFailDate}
		<where>
			ADMIN_ID = #{adminId}
		</where>
	</update>
	
	<select id="selectLoginFailDate" parameterType="String" resultType="Date">
		SELECT
			ADMIN_LOGIN_FAIL_DATE
		FROM ASA_ADMIN_MEMBER 
		<where>
			ADMIN_ID = #{value}
		</where>
	</select>
	
	<update id="updateAdminMemberStatus" parameterType="AdminMember">
		UPDATE ASA_ADMIN_MEMBER SET
			<if test="adminActive != null">
				ADMIN_ACTIVE	= #{adminActive}
			</if>
			<if test="adminLock != null">
				ADMIN_LOCK		= #{adminLock}
			</if>
		<where>
			ADMIN_ID = #{adminId}
		</where>
	</update>
	
	
	<!-- ================= 사이트별 역할 릴레이션 =================== -->
	<!-- ================= 사이트별 역할 릴레이션 =================== -->
	
	<select id="selectAdminSiteRoleRelationList" parameterType="String" resultMap="adminSiteRoleRelPlainResultMap">
		SELECT 
			ADMIN_ID
			, SITE_PREFIX
			, ROLE_CODE
		FROM ASA_ADMIN_SITE_ROLE_REL 
		<where>
			ADMIN_ID = #{value}
		</where> 
	</select>
	
	<insert id="insertAdminSiteRoleRel" parameterType="AdminSiteRoleRel">
		INSERT INTO ASA_ADMIN_SITE_ROLE_REL (
			ADMIN_ID
			, SITE_PREFIX
			, ROLE_CODE
		) VALUES (
			#{adminId}
			, #{sitePrefix}
			, #{roleCode}
		)
			
	</insert>
	
	<delete id="deleteAdminSiteRoleRel" parameterType="String">
		DELETE FROM ASA_ADMIN_SITE_ROLE_REL 
		<where>
			ADMIN_ID = #{value}
		</where>
	</delete>
	
	<delete id="deleteAdminSiteRoleRelByRoleCode" parameterType="String">
		DELETE FROM ASA_ADMIN_SITE_ROLE_REL 
		<where>
			ROLE_CODE = #{value}
		</where>
	</delete>
	
	<delete id="deleteAdminSiteRoleRelBySitePrefix" parameterType="String">
		DELETE FROM ASA_ADMIN_SITE_ROLE_REL 
		<where>
			SITE_PREFIX = #{value}
		</where>
	</delete>

	
	<!-- ================= 관리자 개인정보 수정 =================== -->
	<!-- ================= 관리자 개인정보 수정 =================== -->
	
	<update id="updateAdminMemberProfile" parameterType="AdminMember">
		UPDATE ASA_ADMIN_MEMBER SET
			ADMIN_NAME					= #{adminName, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_SEX 				= #{adminSex}
			, ADMIN_EMAIL				= #{adminEmail, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_TEL1				= #{adminTel1, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_TEL2				= #{adminTel2, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_TEL3				= #{adminTel3, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_MOBILE1				= #{adminMobile1, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_MOBILE2				= #{adminMobile2, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_MOBILE3				= #{adminMobile3, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_FAX 				= #{adminFax, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_ZIPCODE 			= #{adminZipcode, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_ADDRESS 			= #{adminAddress, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
			, ADMIN_ADDRESS_DETAIL 		= #{adminAddressDetail, javaType=String, jdbcType=VARCHAR, typeHandler=CryptoStringTypeHandler}
		<where>
			ADMIN_ID	=  #{adminId}
		</where>
	</update>
	
</mapper>