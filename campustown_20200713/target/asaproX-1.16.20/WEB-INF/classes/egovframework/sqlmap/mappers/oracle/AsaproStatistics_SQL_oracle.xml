<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.asapro.statistics.service.StatisticsMapper">
	
	<resultMap type="StatisticsAdminAccessLog" id="statisticsAdminAccessLogPlainResultMap">
		<id column="LOG_ID" property="logId" javaType="Integer" />
		<result column="ADMIN_ID" property="adminId" javaType="String" />
		<result column="ADMIN_NAME" property="adminName" javaType="String" />
		<result column="LOG_REMOTE_IP" property="logRemoteIp" javaType="String" />
		<result column="SITE_ID" property="siteId" javaType="String" />
		<result column="LOG_REGDATE" property="logRegDate" javaType="Date" />
	</resultMap>
	
	<resultMap type="StatisticsMemberInquireLog" id="statisticsMemberInquireLogPlainResultMap">
		<id column="INQ_ID" property="inqId" javaType="Integer" />
		<result column="INQ_WORKER_ID" property="inqWorkerId" javaType="String" />
		<result column="INQ_WORKER_NAME" property="inqWorkerName" javaType="String" />
		<result column="INQ_TARGET_ID" property="inqTargetId" javaType="String" />
		<result column="INQ_TARGET_NAME" property="inqTargetName" javaType="String" />
		<result column="INQ_URL" property="inqUrl" javaType="String" />
		<result column="INQ_WORK" property="inqWork" javaType="String" />
		<result column="INQ_REMORT_IP" property="inqRemoteIp" javaType="String" />
		<result column="INQ_REGDATE" property="inqRegDate" javaType="Date" />
	</resultMap>
	
	<resultMap type="StatisticsUserTemp" id="StatisticsUserTempPlainResultMap">
		<result column="STATIS_YEAR" property="statisYear" javaType="Integer" />
		<result column="STATIS_MONTH" property="statisMonth" javaType="Integer" />
		<result column="STATIS_DAY" property="statisDay" javaType="Integer" />
		<result column="STATIS_HOUR" property="statisHour" javaType="Integer" />
		<result column="STATIS_OS" property="statisOs" javaType="String" />
		<result column="STATIS_BROWSER" property="statisBrowser" javaType="String" />
		<result column="STATIS_IP" property="statisIp" javaType="String" />
		<result column="STATIS_COUNTRY" property="statisCountry" javaType="String" />
		<result column="STATIS_ISO_CODE" property="statisIsoCode" javaType="String" />
		<result column="STATIS_MENU_ID" property="statisMenuId" javaType="String" />
		<result column="STATIS_IS_MENU" property="statisIsMenu" javaType="Boolean" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
	</resultMap>
	
	<resultMap type="StatisticsSession" id="StatisticsSessionPlainResultMap">
		<result column="STATIS_YEAR" property="statisYear" javaType="Integer" />
		<result column="STATIS_MONTH" property="statisMonth" javaType="Integer" />
		<result column="STATIS_DAY" property="statisDay" javaType="Integer" />
		<result column="STATIS_HOUR" property="statisHour" javaType="Integer" />
		<result column="STATIS_SESSION_CNT" property="statisSessionCnt" javaType="Integer" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
		<result column="WEEK_START" property="weekStart" javaType="String" />
		<result column="WEEK_END" property="weekEnd" javaType="String" />
		<result column="WEEK_OF_YEAR_ISO" property="weekOfYearIso" javaType="String" />
		<result column="WEEK_OF_MONTH" property="weekOfMonth" javaType="String" />
	</resultMap>
	
	<resultMap type="StatisticsOs" id="StatisticsOsPlainResultMap">
		<result column="STATIS_YEAR" property="statisYear" javaType="Integer" />
		<result column="STATIS_MONTH" property="statisMonth" javaType="Integer" />
		<result column="STATIS_DAY" property="statisDay" javaType="Integer" />
		<result column="STATIS_OS" property="statisOs" javaType="String" />
		<result column="STATIS_OS_CNT" property="statisOsCnt" javaType="Integer" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
	</resultMap>
	
	<resultMap type="StatisticsBrowser" id="StatisticsBrowserPlainResultMap">
		<result column="STATIS_YEAR" property="statisYear" javaType="Integer" />
		<result column="STATIS_MONTH" property="statisMonth" javaType="Integer" />
		<result column="STATIS_DAY" property="statisDay" javaType="Integer" />
		<result column="STATIS_BROWSER" property="statisBrowser" javaType="String" />
		<result column="STATIS_BROWSER_CNT" property="statisBrowserCnt" javaType="Integer" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
	</resultMap>
	
	<resultMap type="StatisticsCountry" id="StatisticsCountryPlainResultMap">
		<result column="STATIS_YEAR" property="statisYear" javaType="Integer" />
		<result column="STATIS_MONTH" property="statisMonth" javaType="Integer" />
		<result column="STATIS_DAY" property="statisDay" javaType="Integer" />
		<result column="STATIS_COUNTRY_KOR" property="statisCountryKor" javaType="String" />
		<result column="STATIS_COUNTRY_ENG" property="statisCountryEng" javaType="String" />
		<result column="STATIS_COUNTRY_CNT" property="statisCountryCnt" javaType="Integer" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
	</resultMap>
	
	<resultMap type="StatisticsMenu" id="StatisticsMenuPlainResultMap">
		<result column="STATIS_YEAR" property="statisYear" javaType="Integer" />
		<result column="STATIS_MONTH" property="statisMonth" javaType="Integer" />
		<result column="STATIS_DAY" property="statisDay" javaType="Integer" />
		<result column="STATIS_MENU_ID" property="statisMenuId" javaType="String" />
		<result column="STATIS_MENU_CNT" property="statisMenuCnt" javaType="Integer" />
		<result column="SITE_PREFIX" property="sitePrefix" javaType="String" />
	</resultMap>
	
	<sql id="statisticsAdminAccessLogPlainColumns">
		LOG_ID
		, ADMIN_ID
		, ADMIN_NAME
		, LOG_REMOTE_IP
		, SITE_ID
		, LOG_REGDATE
	</sql>

	<sql id="statisticsMemberInquireLogPlainColumns">
		INQ_ID
		, INQ_WORKER_ID
		, INQ_WORKER_NAME
		, INQ_TARGET_ID
		, INQ_TARGET_NAME
		, INQ_URL
		, INQ_WORK
		, INQ_REMORT_IP
		, INQ_REGDATE
	</sql>
	
	<sql id="statisticsUserTempPlainColumns">
		STATIS_YEAR
		, STATIS_MONTH
		, STATIS_DAY
		, STATIS_HOUR
		, STATIS_OS
		, STATIS_BROWSER
		, STATIS_IP
		, STATIS_COUNTRY
		, STATIS_ISO_CODE
		, STATIS_MENU_ID
		, STATIS_IS_MENU
		, SITE_PREFIX
	</sql>
	
	<sql id="statisticsSessionPlainColumns">
		STATIS_YEAR
		, STATIS_MONTH
		, STATIS_DAY
		, STATIS_HOUR
		, STATIS_SESSION_CNT
		, SITE_PREFIX
		, WEEK_START
		, WEEK_END
		, WEEK_OF_YEAR_ISO
		, WEEK_OF_MONTH
	</sql>
	
	<sql id="statisticsOsPlainColumns">
		STATIS_YEAR
		, STATIS_MONTH
		, STATIS_DAY
		, STATIS_OS
		, STATIS_OS_CNT
		, SITE_PREFIX
	</sql>
	
	<sql id="statisticsBrowserPlainColumns">
		STATIS_YEAR
		, STATIS_MONTH
		, STATIS_DAY
		, STATIS_BROWSER
		, STATIS_BROWSER_CNT
		, SITE_PREFIX
	</sql>
	
	<sql id="statisticsCountryPlainColumns">
		STATIS_YEAR
		, STATIS_MONTH
		, STATIS_DAY
		, STATIS_COUNTRY_KOR
		, STATIS_COUNTRY_ENG
		, STATIS_COUNTRY_CNT
		, SITE_PREFIX
	</sql>
	
	<sql id="statisticsMenuPlainColumns">
		STATIS_YEAR
		, STATIS_MONTH
		, STATIS_DAY
		, STATIS_MENU_ID
		, STATIS_MENU_CNT
		, SITE_PREFIX
	</sql>
	
	<!-- ======================================================================================== -->
	<!-- ================================  접속로그  =============================================== -->
	<!-- ======================================================================================== -->
	
	<insert id="insertStatisticsAdminAccessLog" parameterType="StatisticsAdminAccessLog">
		<selectKey keyProperty="logId" order="BEFORE" resultType="Integer">
			SELECT ASA_STATISTICS_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ASA_ADMIN_ACCESS_LOG (
			<include refid="statisticsAdminAccessLogPlainColumns"/>
		) VALUES (
			#{logId}
			, #{adminId}
			, #{adminName}
			, #{logRemoteIp}
			, #{siteId}
			, #{logRegDate}
		)
	</insert>
	
	<select id="selectStatisticsAdminAccessLogList" parameterType="StatisticsAdminAccessLogSearch" resultMap="statisticsAdminAccessLogPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="statisticsAdminAccessLogPlainColumns"/>
			FROM ASA_ADMIN_ACCESS_LOG
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							ADMIN_ID LIKE '%'||#{sv}||'%'
							OR ADMIN_NAME LIKE '%'||#{sv}||'%'
							OR LOG_REMOTE_IP LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						AND ${sc} LIKE '%'||#{sv}||'%'
					</if>
				</if>
				<if test="logStartDate != null and logStartDate != ''">
					<![CDATA[
					AND LOG_REGDATE >= TO_DATE(nvl(#{logStartDate}, '2000-01-01')||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					]]>	
					<if test="logEndDate != null and logEndDate != ''">
						<![CDATA[
						AND LOG_REGDATE <= TO_DATE(nvl(#{logEndDate}, '2099-01-01')||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
						]]>	
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY LOG_REGDATE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectStatisticsAdminAccessLogListTotal" parameterType="StatisticsAdminAccessLogSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ASA_ADMIN_ACCESS_LOG
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						ADMIN_ID LIKE '%'||#{sv}||'%'
						OR ADMIN_NAME LIKE '%'||#{sv}||'%'
						OR LOG_REMOTE_IP LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
			</if>
			<if test="logStartDate != null and logStartDate != ''">
				<![CDATA[
				AND LOG_REGDATE >= TO_DATE(nvl(#{logStartDate}, '2000-01-01')||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
				]]>	
				<if test="logEndDate != null and logEndDate != ''">
					<![CDATA[
					AND LOG_REGDATE <= TO_DATE(nvl(#{logEndDate}, '2099-01-01')||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
					]]>	
				</if>
			</if>
		</where>
	</select>
	
	
	<!-- ======================================================================================== -->
	<!-- ================================  관리자 정보 관리 로그  =============================================== -->
	<!-- ======================================================================================== -->
	
	<insert id="insertStatisticsAdminInquireLog" parameterType="StatisticsMemberInquireLog">
		<selectKey keyProperty="inqId" order="BEFORE" resultType="Integer">
			SELECT ASA_STATISTICS_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ASA_ADMIN_INQUIRE_LOG (
			<include refid="statisticsMemberInquireLogPlainColumns"/>
		) VALUES (
			#{inqId}
			, #{inqWorkerId}
			, #{inqWorkerName}
			, #{inqTargetId}
			, #{inqTargetName}
			, #{inqUrl}
			, #{inqWork}
			, #{inqRemoteIp}
			, #{inqRegDate}
		)
	</insert>
	
	<select id="selectStatisticsAdminInquireLogList" parameterType="StatisticsMemberInquireLogSearch" resultMap="statisticsMemberInquireLogPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="statisticsMemberInquireLogPlainColumns"/>
			FROM ASA_ADMIN_INQUIRE_LOG
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							INQ_WORKER_ID LIKE '%'||#{sv}||'%'
							OR INQ_WORKER_NAME LIKE '%'||#{sv}||'%'
							OR INQ_REMORT_IP LIKE '%'||#{sv}||'%'
							OR INQ_TARGET_ID LIKE '%'||#{sv}||'%'
							OR INQ_TARGET_NAME LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						AND ${sc} LIKE '%'||#{sv}||'%'
					</if>
				</if>
				<if test="inqStartDate != null and inqStartDate != ''">
					<![CDATA[
					AND INQ_REGDATE >= TO_DATE(nvl(#{inqStartDate}, '2000-01-01')||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					]]>	
					<if test="inqEndDate != null and inqEndDate != ''">
						<![CDATA[
						AND INQ_REGDATE <= TO_DATE(nvl(#{inqEndDate}, '2099-01-01')||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
						]]>	
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY INQ_REGDATE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectStatisticsAdminInquireLogListTotal" parameterType="StatisticsMemberInquireLogSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ASA_ADMIN_INQUIRE_LOG
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						INQ_WORKER_ID LIKE '%'||#{sv}||'%'
						OR INQ_WORKER_NAME LIKE '%'||#{sv}||'%'
						OR INQ_REMORT_IP LIKE '%'||#{sv}||'%'
						OR INQ_TARGET_ID LIKE '%'||#{sv}||'%'
						OR INQ_TARGET_NAME LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
			</if>
			<if test="inqStartDate != null and inqStartDate != ''">
				<![CDATA[
				AND INQ_REGDATE >= TO_DATE(nvl(#{inqStartDate}, '2000-01-01')||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
				]]>	
				<if test="inqEndDate != null and inqEndDate != ''">
					<![CDATA[
					AND INQ_REGDATE <= TO_DATE(nvl(#{inqEndDate}, '2099-01-01')||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
					]]>	
				</if>
			</if>
		</where>
	</select>
	
	<!-- ======================================================================================== -->
	<!-- ================================  사용자 정보 조회 로그  =============================================== -->
	<!-- ======================================================================================== -->
	
	<insert id="insertStatisticsUserInquireLog" parameterType="StatisticsMemberInquireLog">
		<selectKey keyProperty="inqId" order="BEFORE" resultType="Integer">
			SELECT ASA_STATISTICS_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ASA_USER_INQUIRE_LOG (
			<include refid="statisticsMemberInquireLogPlainColumns"/>
		) VALUES (
			#{inqId}
			, #{inqWorkerId}
			, #{inqWorkerName}
			, #{inqTargetId}
			, #{inqTargetName}
			, #{inqUrl}
			, #{inqWork}
			, #{inqRemoteIp}
			, #{inqRegDate}
		)
	</insert>
	
	<select id="selectStatisticsUserInquireLogList" parameterType="StatisticsMemberInquireLogSearch" resultMap="statisticsMemberInquireLogPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="statisticsMemberInquireLogPlainColumns"/>
			FROM ASA_USER_INQUIRE_LOG
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							INQ_WORKER_ID LIKE '%'||#{sv}||'%'
							OR INQ_WORKER_NAME LIKE '%'||#{sv}||'%'
							OR INQ_REMORT_IP LIKE '%'||#{sv}||'%'
							OR INQ_TARGET_ID LIKE '%'||#{sv}||'%'
							OR INQ_TARGET_NAME LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						AND ${sc} LIKE '%'||#{sv}||'%'
					</if>
				</if>
				<if test="inqStartDate != null and inqStartDate != ''">
					<![CDATA[
					AND INQ_REGDATE >= TO_DATE(nvl(#{inqStartDate}, '2000-01-01')||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
					]]>	
					<if test="inqEndDate != null and inqEndDate != ''">
						<![CDATA[
						AND INQ_REGDATE <= TO_DATE(nvl(#{inqEndDate}, '2099-01-01')||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
						]]>	
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY INQ_REGDATE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectStatisticsUserInquireLogListTotal" parameterType="StatisticsMemberInquireLogSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ASA_USER_INQUIRE_LOG
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						INQ_WORKER_ID LIKE '%'||#{sv}||'%'
						OR INQ_WORKER_NAME LIKE '%'||#{sv}||'%'
						OR INQ_REMORT_IP LIKE '%'||#{sv}||'%'
						OR INQ_TARGET_ID LIKE '%'||#{sv}||'%'
						OR INQ_TARGET_NAME LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
			</if>
			<if test="inqStartDate != null and inqStartDate != ''">
				<![CDATA[
				AND INQ_REGDATE >= TO_DATE(nvl(#{inqStartDate}, '2000-01-01')||' 00:00:00', 'YYYY-MM-DD HH24:MI:SS')
				]]>	
				<if test="inqEndDate != null and inqEndDate != ''">
					<![CDATA[
					AND INQ_REGDATE <= TO_DATE(nvl(#{inqEndDate}, '2099-01-01')||' 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
					]]>	
				</if>
			</if>
		</where>
	</select>
	
	<!-- ======================================================================================== -->
	<!-- ================================  통계 (사용자)  =============================================== -->
	<!-- ======================================================================================== -->
	
	<insert id="insertStatisticsUserTemp" parameterType="StatisticsUserTemp">
		INSERT INTO ASA_STATISTICS_TEMP (
			<include refid="statisticsUserTempPlainColumns"/>
		) VALUES (
			#{statisYear}
			, #{statisMonth}
			, #{statisDay}
			, #{statisHour}
			, #{statisOs}
			, #{statisBrowser}
			, #{statisIp}
			, #{statisCountry}
			, #{statisIsoCode}
			, #{statisMenuId}
			, #{statisIsMenu}
			, #{sitePrefix}
		)
	</insert>
	
	<select id="selectStatisticsUserTempList" parameterType="StatisticsSearch" resultMap="StatisticsUserTempPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="statisticsUserTempPlainColumns"/>
			FROM ASA_STATISTICS_TEMP
			<where>
				
				<if test="statisYear != null and statisYear > 0">
					AND STATIS_YEAR = #{statisYear} 
					<if test="statisMonth != null and statisMonth > 0">
						AND STATIS_MONTH = #{statisMonth} 
						<if test="statisDay != null and statisDay > 0">
							AND STATIS_DAY = #{statisDay} 
						</if>
					</if>
				</if>
				<if test="statisType != null and statisType != ''">
					<if test="statisType == 'os'">
						AND STATIS_OS = #{statisType} 
					</if>
					<if test="statisType == 'browser'">
						AND STATIS_BROWSER = #{statisType} 
					</if>
					<if test="statisType == 'country'">
						AND STATIS_IP = #{statisType} 
					</if>
				</if>
				<if test="sitePrefix != null and sitePrefix != ''">
					AND SITE_PREFIX = #{sitePrefix} 
				</if>
				<if test="statisIsMenu != null">
					AND STATIS_IS_MENU = #{statisIsMenu} 
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY STATIS_YEAR DESC, STATIS_MONTH DESC, STATIS_DAY DESC, STATIS_HOUR DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectStatisticsUserTempListTotal" parameterType="StatisticsSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ASA_STATISTICS_TEMP
		<where>
			<if test="statisYear != null and statisYear > 0">
				AND STATIS_YEAR = #{statisYear} 
				<if test="statisMonth != null and statisMonth > 0">
					AND STATIS_MONTH = #{statisMonth} 
					<if test="statisDay != null and statisDay > 0">
						AND STATIS_DAY = #{statisDay} 
					</if>
				</if>
			</if>
			<if test="statisType != null and statisType != ''">
				<if test="statisType == 'os'">
					AND STATIS_OS = #{statisType} 
				</if>
				<if test="statisType == 'browser'">
					AND STATIS_BROWSER = #{statisType} 
				</if>
				<if test="statisType == 'country'">
					AND STATIS_IP = #{statisType} 
				</if>
			</if>
			<if test="sitePrefix != null and sitePrefix != ''">
				AND SITE_PREFIX = #{sitePrefix} 
			</if>
			<if test="statisIsMenu != null">
				AND STATIS_IS_MENU = #{statisIsMenu} 
			</if>
		</where>
	</select>
	
	<delete id="deleteStatisticsUserTemp" parameterType="StatisticsSearch">
		DELETE FROM ASA_STATISTICS_TEMP
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
		</where>
	</delete>
	
	<!-- session -->
	<select id="selectStatisSessionList" parameterType="StatisticsSearch" resultMap="StatisticsSessionPlainResultMap">
		SELECT
			<include refid="statisticsSessionPlainColumns"/>
		FROM ASA_STATIS_SESSION
		<where>
			
			<if test="statisStartDate != null and statisStartDate !=''">
				<![CDATA[
				AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH ,2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
				]]>	
			</if>
			<if test="statisEndDate != null and statisEndDate !=''">
				<![CDATA[
				AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
				]]>	
			</if>
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</select>
	
	<select id="selectStatisSessionMapByDateTypeHour" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.STATIS_YEAR||'-'||LPAD(Z.STATIS_MONTH, 2, '0')||'-'||LPAD(Z.STATIS_DAY, 2, '0')||' '||LPAD(Z.STATIS_HOUR, 2, '0')||':00' AS DATE_KEY
			, Z.STATIS_SESSION_CNT AS CNT_BY_DAY
		FROM 
			(SELECT
				STATIS_YEAR
			    , STATIS_MONTH
			    , STATIS_DAY
 				, STATIS_HOUR
 				, STATIS_SESSION_CNT
			FROM ASA_STATIS_SESSION
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			ORDER BY  STATIS_YEAR ASC, STATIS_MONTH ASC, STATIS_DAY ASC, STATIS_HOUR ASC
		) Z
	</select>
	
	<select id="selectStatisSessionMapByDateTypeDay" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.STATIS_YEAR||'-'||LPAD(Z.STATIS_MONTH, 2, '0')||'-'||LPAD(Z.STATIS_DAY, 2, '0') AS DATE_KEY
			, Z.CNT_BY_DAY
		FROM 
			(SELECT
				STATIS_YEAR
			    , STATIS_MONTH
			    , STATIS_DAY
 				, SUM(STATIS_SESSION_CNT) AS CNT_BY_DAY
			FROM ASA_STATIS_SESSION
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY STATIS_YEAR, STATIS_MONTH, STATIS_DAY
			ORDER BY  STATIS_YEAR ASC, STATIS_MONTH ASC, STATIS_DAY ASC
		) Z
	</select>
	
	<select id="selectStatisSessionMapByDateTypeWeek" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.WEEK_START||'~'||Z.WEEK_END AS DATE_KEY
			, Z.CNT_BY_DAY
			, Z.WEEK_OF_YEAR_ISO
			, Z.WEEK_OF_MONTH
		FROM 
			(SELECT
				WEEK_START
			    , WEEK_END
			    , WEEK_OF_YEAR_ISO
			    , WEEK_OF_MONTH
 				, SUM(STATIS_SESSION_CNT) AS CNT_BY_DAY
			FROM ASA_STATIS_SESSION
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY WEEK_START, WEEK_END, WEEK_OF_YEAR_ISO, WEEK_OF_MONTH
			ORDER BY  WEEK_START ASC, WEEK_END ASC, WEEK_OF_YEAR_ISO ASC, WEEK_OF_MONTH ASC
		) Z
	</select>
	
	<select id="selectStatisSessionMapByDateTypeMonth" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.STATIS_YEAR||'-'||LPAD(Z.STATIS_MONTH, 2, '0') AS DATE_KEY
			, Z.CNT_BY_DAY
		FROM 
			(SELECT
				STATIS_YEAR
			    , STATIS_MONTH
 				, SUM(STATIS_SESSION_CNT) AS CNT_BY_DAY
			FROM ASA_STATIS_SESSION
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY STATIS_YEAR, STATIS_MONTH
			ORDER BY  STATIS_YEAR ASC, STATIS_MONTH ASC
		) Z
	</select>
	
	<select id="selectStatisSession" parameterType="StatisticsSession" resultMap="StatisticsSessionPlainResultMap">
		SELECT
			<include refid="statisticsSessionPlainColumns"/>
		FROM ASA_STATIS_SESSION
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_HOUR		= #{statisHour} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</select>
	
	<select id="selectStatisticsUserTempCntByHour" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT
			STATIS_HOUR
	  		, COUNT(*) AS CNT_BY_HOUR
		FROM ASA_STATISTICS_TEMP
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND SITE_PREFIX 	= #{sitePrefix} 
			<if test="statisIsMenu != null">
				AND STATIS_IS_MENU = #{statisIsMenu} 
			</if>
		</where>
		GROUP BY STATIS_HOUR
		ORDER BY STATIS_HOUR ASC
	</select>
	
	<update id="updateStatisSession" parameterType="StatisticsSession">
		UPDATE ASA_STATIS_SESSION SET
			STATIS_SESSION_CNT 		= #{statisSessionCnt}
			, WEEK_START 			= TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') , 'YYYY-MM-DD') 
			, WEEK_END 				= TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') + 6 , 'YYYY-MM-DD')
			, WEEK_OF_YEAR_ISO 		= TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') , 'IW')
			, WEEK_OF_MONTH 		= TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') , 'W')
			
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_HOUR 	= #{statisHour} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</update>
	
	<insert id="insertStatisSession" parameterType="StatisticsSession">
		INSERT INTO ASA_STATIS_SESSION (
			<include refid="statisticsSessionPlainColumns"/>
		) VALUES (
			#{statisYear} 
			, #{statisMonth} 
			, #{statisDay} 
			, #{statisHour} 
			, #{statisSessionCnt} 
			, #{sitePrefix} 
			, TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') , 'YYYY-MM-DD')
			, TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') + 6 , 'YYYY-MM-DD')
			, TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') , 'IW')
			, TO_CHAR(TRUNC(TO_DATE(#{statisYear}||LPAD(#{statisMonth}, 2, '0')||LPAD(#{statisDay}, 2, '0'),'YYYYMMDD'),'DY') , 'W')
		)
	</insert>
	
	<!-- OS -->
	<select id="selectStatisticsUserTempCntByOs" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT
			STATIS_OS
	  		, COUNT(*) AS CNT_BY_OS
		FROM ASA_STATISTICS_TEMP
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND SITE_PREFIX 	= #{sitePrefix} 
			<if test="statisIsMenu != null">
				AND STATIS_IS_MENU = #{statisIsMenu} 
			</if>
		</where>
		GROUP BY STATIS_OS
	</select>
	
	<select id="selectStatisOsMapList" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.STATIS_OS AS OS_KEY
			, Z.CNT_BY_OS
		FROM 
			(SELECT
				STATIS_OS
 				, SUM(STATIS_OS_CNT) AS CNT_BY_OS
			FROM ASA_STATIS_OS
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY STATIS_OS
			ORDER BY CNT_BY_OS DESC
		) Z
	</select>
	
	<select id="selectStatisOsList" parameterType="StatisticsSearch" resultMap="StatisticsOsPlainResultMap">
		SELECT
			<include refid="statisticsOsPlainColumns"/>
		FROM ASA_STATIS_OS
		<where>
			<if test="statisStartDate != null and statisStartDate !=''">
				<![CDATA[
				AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
				]]>	
			</if>
			<if test="statisEndDate != null and statisEndDate !=''">
				<![CDATA[
				AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
				]]>	
			</if>
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
		ORDER BY STATIS_OS_CNT DESC
	</select>
	
	<select id="selectStatisOs" parameterType="StatisticsOs" resultMap="StatisticsOsPlainResultMap">
		SELECT
			<include refid="statisticsOsPlainColumns"/>
		FROM ASA_STATIS_OS
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_OS 		= #{statisOs} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</select>
	
	<update id="updateStatisOs" parameterType="StatisticsOs">
		UPDATE ASA_STATIS_OS SET
			STATIS_OS_CNT 		= #{statisOsCnt}
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_OS 		= #{statisOs} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</update>
	
	<insert id="insertStatisOs" parameterType="StatisticsOs">
		INSERT INTO ASA_STATIS_OS (
			<include refid="statisticsOsPlainColumns"/>
		) VALUES (
			#{statisYear} 
			, #{statisMonth} 
			, #{statisDay} 
			, #{statisOs} 
			, #{statisOsCnt} 
			, #{sitePrefix} 
		)
	</insert>
	
	
	<!-- 브라우저 -->
	<select id="selectStatisticsUserTempCntByBrowser" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT
			STATIS_BROWSER
	  		, COUNT(*) AS CNT_BY_BROWSER
		FROM ASA_STATISTICS_TEMP
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND SITE_PREFIX 	= #{sitePrefix} 
			<if test="statisIsMenu != null">
				AND STATIS_IS_MENU = #{statisIsMenu} 
			</if>
		</where>
		GROUP BY STATIS_BROWSER
	</select>
	
	<select id="selectStatisBrowserMapList" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.STATIS_BROWSER AS BROWSER_KEY
			, Z.CNT_BY_BROWSER
		FROM 
			(SELECT
				STATIS_BROWSER
 				, SUM(STATIS_BROWSER_CNT) AS CNT_BY_BROWSER
			FROM ASA_STATIS_BROWSER
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY STATIS_BROWSER
			ORDER BY CNT_BY_BROWSER DESC
		) Z
	</select>
	
	<select id="selectStatisBrowser" parameterType="StatisticsBrowser" resultMap="StatisticsBrowserPlainResultMap">
		SELECT
			<include refid="statisticsBrowserPlainColumns"/>
		FROM ASA_STATIS_BROWSER
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_BROWSER	= #{statisBrowser} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</select>
	
	<update id="updateStatisBrowser" parameterType="StatisticsBrowser">
		UPDATE ASA_STATIS_BROWSER SET
			STATIS_BROWSER_CNT 	= #{statisBrowserCnt}
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_BROWSER	= #{statisBrowser} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</update>
	
	<insert id="insertStatisBrowser" parameterType="StatisticsBrowser">
		INSERT INTO ASA_STATIS_BROWSER (
			<include refid="statisticsBrowserPlainColumns"/>
		) VALUES (
			#{statisYear} 
			, #{statisMonth} 
			, #{statisDay} 
			, #{statisBrowser} 
			, #{statisBrowserCnt} 
			, #{sitePrefix} 
		)
	</insert>
	
	<!-- 국가 -->
	<select id="selectStatisticsUserTempCntByCountry" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT
			ST.STATIS_ISO_CODE AS STATIS_ISO_CODE
			, ISO.ENG_NAME AS STATIS_COUNTRY_ENG
	  		, ISO.KOR_NAME AS STATIS_COUNTRY_KOR
	  		, COUNT(*) AS CNT_BY_COUNTRY
		FROM ASA_STATISTICS_TEMP ST 
		LEFT JOIN ASA_STATIS_ISO_3166_1 ISO 
		ON ST.STATIS_ISO_CODE = ISO.ALPHA_2 
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND SITE_PREFIX 	= #{sitePrefix} 
			<if test="statisIsMenu != null">
				AND STATIS_IS_MENU = #{statisIsMenu} 
			</if>
		</where>
		GROUP BY ST.STATIS_ISO_CODE, ISO.ENG_NAME, ISO.KOR_NAME
	</select>
	
	<select id="selectStatisCountryMapList" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT 
			Z.STATIS_COUNTRY_KOR AS COUNTRY_KEY
			, Z.CNT_BY_COUNTRY
		FROM 
			(SELECT
				STATIS_COUNTRY_KOR
 				, SUM(STATIS_COUNTRY_CNT) AS CNT_BY_COUNTRY
			FROM ASA_STATIS_COUNTRY
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY STATIS_COUNTRY_KOR
			ORDER BY CNT_BY_COUNTRY DESC
		) Z
	</select>
	
	<select id="selectStatisCountry" parameterType="StatisticsCountry" resultMap="StatisticsCountryPlainResultMap">
		SELECT
			<include refid="statisticsCountryPlainColumns"/>
		FROM ASA_STATIS_COUNTRY
		<where>
			STATIS_YEAR 			= #{statisYear} 
			AND STATIS_MONTH		= #{statisMonth} 
			AND STATIS_DAY 			= #{statisDay} 
			AND STATIS_COUNTRY_KOR	= #{statisCountryKor} 
			AND SITE_PREFIX 		= #{sitePrefix} 
		</where>
	</select>
	
	<update id="updateStatisCountry" parameterType="StatisticsCountry">
		UPDATE ASA_STATIS_COUNTRY SET
			STATIS_COUNTRY_CNT 	= #{statisCountryCnt}
		<where>
			STATIS_YEAR 			= #{statisYear} 
			AND STATIS_MONTH		= #{statisMonth} 
			AND STATIS_DAY 			= #{statisDay} 
			AND STATIS_COUNTRY_KOR	= #{statisCountryKor} 
			AND SITE_PREFIX 		= #{sitePrefix} 
		</where>
	</update>
	
	<insert id="insertStatisCountry" parameterType="StatisticsCountry">
		INSERT INTO ASA_STATIS_COUNTRY (
			<include refid="statisticsCountryPlainColumns"/>
		) VALUES (
			#{statisYear} 
			, #{statisMonth} 
			, #{statisDay} 
			, #{statisCountryKor} 
			, #{statisCountryEng} 
			, #{statisCountryCnt} 
			, #{sitePrefix} 
		)
	</insert>
	
	
	<!-- 메뉴 -->
	<select id="selectStatisticsUserTempCntByMenu" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap">
		SELECT
			STATIS_MENU_ID
	  		, COUNT(*) AS CNT_BY_MENU
		FROM ASA_STATISTICS_TEMP
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND SITE_PREFIX 	= #{sitePrefix} 
			<if test="statisIsMenu != null">
				AND STATIS_IS_MENU = #{statisIsMenu} 
			</if>
		</where>
		GROUP BY STATIS_MENU_ID
	</select>
	
	<select id="selectStatisMenuMapList" parameterType="StatisticsSearch" resultType="java.util.LinkedHashMap"> 
		SELECT
			Z.STATIS_MENU_ID AS MENU_KEY
			, Z.CNT_BY_MENU
		FROM 
			(SELECT
				STATIS_MENU_ID
 				, SUM(STATIS_MENU_CNT) AS CNT_BY_MENU
			FROM ASA_STATIS_MENU
			<where>
				<if test="statisStartDate != null and statisStartDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') >= #{statisStartDate}
					]]>	
				</if>
				<if test="statisEndDate != null and statisEndDate !=''">
					<![CDATA[
					AND STATIS_YEAR||'-'||LPAD(STATIS_MONTH, 2, '0')||'-'||LPAD(STATIS_DAY, 2, '0') <= #{statisEndDate}
					]]>	
				</if>
				AND SITE_PREFIX 	= #{sitePrefix} 
			</where>
			GROUP BY STATIS_MENU_ID
			ORDER BY CNT_BY_MENU DESC
		) Z
	</select>
	
	<select id="selectStatisMenu" parameterType="StatisticsMenu" resultMap="StatisticsMenuPlainResultMap">
		SELECT
			<include refid="statisticsMenuPlainColumns"/>
		FROM ASA_STATIS_MENU
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_MENU_ID	= #{statisMenuId} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</select>
	
	<update id="updateStatisMenu" parameterType="StatisticsMenu">
		UPDATE ASA_STATIS_MENU SET
			STATIS_MENU_CNT 	= #{statisMenuCnt}
		<where>
			STATIS_YEAR 		= #{statisYear} 
			AND STATIS_MONTH 	= #{statisMonth} 
			AND STATIS_DAY 		= #{statisDay} 
			AND STATIS_MENU_ID	= #{statisMenuId} 
			AND SITE_PREFIX 	= #{sitePrefix} 
		</where>
	</update>
	
	<insert id="insertStatisMenu" parameterType="StatisticsMenu">
		INSERT INTO ASA_STATIS_MENU (
			<include refid="statisticsMenuPlainColumns"/>
		) VALUES (
			#{statisYear} 
			, #{statisMonth} 
			, #{statisDay} 
			, #{statisMenuId} 
			, #{statisMenuCnt} 
			, #{sitePrefix} 
		)
	</insert>
	
</mapper>