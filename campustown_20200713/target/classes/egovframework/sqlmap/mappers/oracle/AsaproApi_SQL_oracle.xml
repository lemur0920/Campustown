<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.asapro.openapiinfo.api.service.ApiMapper">
	
	<resultMap type="JobNewDealBiz" id="jobNewDealBizPlainResultMap">
		<id column="SEQ" property="seq" javaType="Integer"/>
		<result column="BIZ_NM" property="bizNm" javaType="String"/>
		<result column="UP_ORG_NM" property="upOrgNm" javaType="String"/>
		<result column="ORG_NM" property="orgNm" javaType="String"/>
		<result column="PART_NM" property="partNm" javaType="String"/>
		<result column="BIZ_YEAR" property="bizYear" javaType="String"/>
		<result column="UP_BIZ_NM" property="upBizNm" javaType="String"/>
		<result column="BIZ_GRP_NM" property="bizGrpNm" javaType="String"/>
		<result column="BIZ_TYPE_NM" property="bizTypeNm" javaType="String"/>
		<result column="BIZ_TARGET" property="bizTarget" javaType="String"/>
		<result column="ALL_WRK_TIME" property="allWrkTime" javaType="Integer"/>
		<result column="ALL_PAY_AMT" property="allPayAmt" javaType="Integer"/>
		<result column="ALL_SLCT_NUMBER" property="allSlctNumber" javaType="Integer"/>
		<result column="ALL_PLAN_NUMBER" property="allPlanNumber" javaType="Integer"/>
		<result column="PART_WRK_TIME" property="partWrkTime" javaType="Integer"/>
		<result column="PART_PAY_AMT" property="partPayAmt" javaType="Integer"/>
		<result column="PART_SLCT_NUMBER" property="partSlctNumber" javaType="Integer"/>
		<result column="PART_PLAN_NUMBER" property="partPlanNumber" javaType="Integer"/>
		<result column="BIZ_STRT_DD" property="bizStrtDd" javaType="String"/>
		<result column="BIZ_END_DD" property="bizEndDd" javaType="String"/>
		<result column="BIZ_SMRY" property="bizSmry" javaType="String"/>
		<result column="WORK_SMRY" property="workSmry" javaType="String"/>
		<result column="COND_SMRY" property="condSmry" javaType="String"/>
		<result column="PHON_NO_CN" property="phonNoCn" javaType="String"/>
	</resultMap>
	
	<resultMap type="JobEduCenter" id="jobEduCenterPlainResultMap">
		<id column="SEQ" property="seq" javaType="Integer"/>
		<result column="EDC_NM" property="edcNm" javaType="String"/>
		<result column="EDC_PURPS_CN" property="edcPurpsCn" javaType="String"/>
		<result column="EDC_CN" property="edcCn" javaType="String"/>
		<result column="EDC_BEGIN_DE_DT" property="edcBeginDeDt" javaType="String"/>
		<result column="EDC_END_DE_DT" property="edcEndDeDt" javaType="String"/>
		<result column="EDC_TIME_HM" property="edcTimeHm" javaType="String"/>
		<result column="ATNLC_QUALF_CN" property="atnlcQualfCn" javaType="String"/>
		<result column="LCTRUM_INFO_CN" property="lctrumInfoCn" javaType="String"/>
		<result column="EDC_AMOUNT_AT_NM" property="edcAmountAtNm" javaType="String"/>
		<result column="MATRL_AMOUNT_AT_NM" property="matrlAmountAtNm" javaType="String"/>
		<result column="PSNCPA_CO" property="psncpaCo" javaType="Integer"/>
		<result column="RCRIT_BEGIN_DE_DT" property="rcritBeginDeDt" javaType="String"/>
		<result column="RCRIT_END_DE_DT" property="rcritEndDeDt" javaType="String"/>
		<result column="AGE_CO_NM" property="ageCoNm" javaType="String"/>
		<result column="SEX_QUALF_CN" property="sexQualfCn" javaType="String"/>
		<result column="STTUS_NM" property="sttusNm" javaType="String"/>
	</resultMap>
	
	<resultMap type="JynEmpSpt" id="jynEmpSptPlainResultMap">
		<id column="SEQ" property="seq" javaType="Integer"/>
		<result column="BUSI_ID" property="busiId" javaType="String"/>
		<result column="BUSI_NM" property="busiNm" javaType="String"/>
		<result column="SUB_BUSI_NM" property="subBusiNm" javaType="String"/>
		<result column="DTL_BUSI_NM" property="dtlBusiNm" javaType="String"/>
		<result column="SPT_SCALE" property="sptScale" javaType="String"/>
		<result column="BUSI_SUM" property="busiSum" javaType="String"/>
		<result column="CHARGER_ORG_NM" property="chargerOrgNm" javaType="String"/>
		<result column="ONLINE_APPL_POSS_YN" property="onlineApplPossYn" javaType="String"/>
		<result column="APPL_URL" property="applUrl" javaType="String"/>
		<result column="BUSI_TP_CD" property="busiTpCd" javaType="String"/>
		<result column="DETAL_URL" property="detalUrl" javaType="String"/>
		<result column="AGE_ETC_CONT" property="ageEtcCont" javaType="String"/>
		<result column="EDUBG_ETC_CONT" property="edubgEtcCont" javaType="String"/>
		<result column="EMP_ETC_CONT" property="empEtcCont" javaType="String"/>
		<result column="RELINFO_URL" property="relinfoUrl" javaType="String"/>
		<result column="CHARGER_CLCD" property="chargerClcd" javaType="String"/>	
	</resultMap>
		
	 <resultMap type="PublicEmplInfo" id="publicEmplInfoPlainResultMap">
		<id column="SEQ" property="seq" javaType="Integer"/>
		<result column="READNUM" property="readnum" javaType="Integer"/>
		<result column="REGDATE" property="regdate" javaType="String"/>
		<result column="TITLE" property="title" javaType="String"/>
		<result column="TYPE01" property="type01" javaType="String"/>
		<result column="TYPE02" property="type02" javaType="String"/>
		<result column="TYPEINFO01" property="typeinfo01" javaType="String"/>
		<result column="TYPEINFO02" property="typeinfo02" javaType="String"/>
		<result column="TYPEINFO03" property="typeinfo03" javaType="String"/>
		<result column="USERID" property="userid" javaType="String"/>
		<result column="USERNAME" property="username" javaType="String"/>
		<result column="EMPMNSN" property="empmnsn" javaType="String"/>
		<result column="CONTENTS" property="contents" javaType="String"/>
		<result column="DEPT_CODE" property="deptCode" javaType="String"/>
		<result column="DEPT_NAME" property="deptName" javaType="String"/>
		<result column="ENDDATE" property="enddate" javaType="String"/>
		<result column="LINK01" property="link01" javaType="String"/>
		<result column="LINK02" property="link02" javaType="String"/>
		<result column="LINK03" property="link03" javaType="String"/>
		<result column="MODDATE" property="moddate" javaType="String"/>
	</resultMap>
	
	<resultMap type="RegionEventInfo" id="regionEventInfoPlainResultMap">
		<id column="SEQUENCE" property="sequence" javaType="Integer"/>
		<result column="TITLE" property="title" javaType="String"/>
		<result column="CONTENTS" property="contents" javaType="String"/>
		<result column="FILE_URL" property="fileUrl" javaType="String"/>
		<result column="DEL_YN" property="delYn" javaType="String"/>
		<result column="REG_NAME" property="regName" javaType="String"/>
		<result column="REG_DATE" property="regDate" javaType="String"/>
		<result column="UPD_NAME" property="updName" javaType="String"/>
		<result column="UPD_DATE" property="updDate" javaType="String"/>
	</resultMap>
	
	<resultMap type="YouthActSupInfo" id="youthActSupInfoPlainResultMap">
		<id column="SEQUENCE" property="sequence" javaType="Integer"/>
		<result column="TITLE" property="title" javaType="String"/>
		<result column="CONTENTS" property="contents" javaType="String"/>
		<result column="FILE_URL" property="fileUrl" javaType="String"/>
		<result column="DEL_YN" property="delYn" javaType="String"/>
		<result column="REG_NAME" property="regName" javaType="String"/>
		<result column="REG_DATE" property="regDate" javaType="String"/>
		<result column="UPD_NAME" property="updName" javaType="String"/>
		<result column="UPD_DATE" property="updDate" javaType="String"/>
	</resultMap>
	
	<resultMap type="YouthProgram" id="youthProgramPlainResultMap">
		<id column="SEQUENCE" property="sequence" javaType="Integer"/>
		<result column="SUPPORT_BIZ_CODE" property="supportBizCode" javaType="String"/>
		<result column="TITLE" property="title" javaType="String"/>
		<result column="CONTENTS" property="contents" javaType="String"/>
		<result column="RECEPTION_START_DATE" property="receptionStartDate" javaType="String"/>
		<result column="RECEPTION_END_DATE" property="receptionEndDate" javaType="String"/>
		<result column="EDUCATION_START_DATE" property="educationStartDate" javaType="String"/>
		<result column="EDUCATION_END_DATE" property="educationEndDate" javaType="String"/>
		<result column="LINE_EXPLANATION" property="lineExplanation" javaType="String"/>
		<result column="FEE" property="fee" javaType="String"/>
		<result column="PERSONNEL" property="personnel" javaType="Integer"/>
		<result column="PARTICIPANT_NUMBER" property="participantNumber" javaType="Integer"/>
		<result column="APPLICATION_LINK" property="applicationLink" javaType="String"/>
		<result column="FILE_URL" property="fileUrl" javaType="String"/>
		<result column="OPEN_YN" property="openYn" javaType="String"/>
		<result column="DEL_YN" property="delYn" javaType="String"/>
		<result column="REG_NAME" property="regName" javaType="String"/>
		<result column="REG_DATE" property="regDate" javaType="String"/>
		<result column="UPD_NAME" property="updName" javaType="String"/>
		<result column="UPD_DATE" property="updDate" javaType="String"/>
	</resultMap>
	
	
	
	<sql id="jobNewDealBizColumns">
		SEQ
	  ,	BIZ_NM
	  ,	UP_ORG_NM
	  ,	ORG_NM
	  ,	PART_NM
	  ,	BIZ_YEAR
	  ,	UP_BIZ_NM
	  ,	BIZ_GRP_NM
	  ,	BIZ_TYPE_NM
	  ,	BIZ_TARGET
	  ,	ALL_WRK_TIME
	  ,	ALL_PAY_AMT
	  ,	ALL_SLCT_NUMBER
	  ,	ALL_PLAN_NUMBER
	  ,	PART_WRK_TIME
	  ,	PART_PAY_AMT
	  ,	PART_SLCT_NUMBER
	  ,	PART_PLAN_NUMBER
	  ,	BIZ_STRT_DD
	  ,	BIZ_END_DD
	  ,	BIZ_SMRY
	  ,	WORK_SMRY
	  ,	COND_SMRY
	  , PHON_NO_CN
	</sql>
	
	<sql id="jobEduCenterColumns">
		SEQ
	  , EDC_NM
	  , EDC_PURPS_CN
	  , EDC_CN
	  , EDC_BEGIN_DE_DT
	  , EDC_END_DE_DT
	  , EDC_TIME_HM
	  , ATNLC_QUALF_CN
	  , LCTRUM_INFO_CN
	  , EDC_AMOUNT_AT_NM
	  , MATRL_AMOUNT_AT_NM
	  , PSNCPA_CO
	  , RCRIT_BEGIN_DE_DT
	  , RCRIT_END_DE_DT
	  , AGE_CO_NM
	  , SEX_QUALF_CN
	  , STTUS_NM
	</sql>
	
	<sql id="jynEmpSptColumns">
		SEQ
	  , BUSI_ID
	  , BUSI_NM
	  , SUB_BUSI_NM
	  , DTL_BUSI_NM
	  , SPT_SCALE
	  , BUSI_SUM
	  , CHARGER_ORG_NM
	  , ONLINE_APPL_POSS_YN
	  , APPL_URL
	  , BUSI_TP_CD
	  , DETAL_URL
	  , AGE_ETC_CONT
	  , EDUBG_ETC_CONT
	  , EMP_ETC_CONT
	  , RELINFO_URL
	  , CHARGER_CLCD
	</sql>
	
	<sql id="publicEmplInfoColumns">
	    SEQ
	  , READNUM
	  , REGDATE
	  , TITLE
	  , TYPE01
	  , TYPE02
	  , TYPEINFO01
	  , TYPEINFO02
	  , TYPEINFO03
	  , USERID
	  , USERNAME
	  , EMPMNSN
	  , CONTENTS
	  , DEPT_CODE
	  , DEPT_NAME
	  , ENDDATE
	  , LINK01
	  , LINK02
	  , LINK03
	  , MODDATE
	</sql>
	
	<sql id="regionEventInfoColumns">
	    SEQUENCE
	  , TITLE
	  , CONTENTS
	  , FILE_URL
	  , DEL_YN
	  , REG_NAME
	  , REG_DATE
	  , UPD_NAME
	  , UPD_DATE
	</sql>
	
	<sql id="youthActSupInfoColumns">
	    SEQUENCE
	  , TITLE
	  , CONTENTS
	  , FILE_URL
	  , DEL_YN
	  , REG_NAME
	  , REG_DATE
	  , UPD_NAME
	  , UPD_DATE
	</sql>
	
	<sql id="youthProgramColumns">
	    SEQUENCE
	  , SUPPORT_BIZ_CODE
	  , TITLE
	  , CONTENTS
	  , RECEPTION_START_DATE
	  , RECEPTION_END_DATE
	  , EDUCATION_START_DATE
	  , EDUCATION_END_DATE
	  , LINE_EXPLANATION
	  , FEE
	  , PERSONNEL
	  , PARTICIPANT_NUMBER
	  , APPLICATION_LINK
	  , FILE_URL
	  , OPEN_YN
	  , DEL_YN
	  , REG_NAME
	  , REG_DATE
	  , UPD_NAME
	  , UPD_DATE
	</sql>
	
	<!-- ===================  청년뉴딜일자리정보 =========================-->
	<!-- ===================  청년뉴딜일자리정보 =========================-->
	<select id="selectJobNewDealBizList" parameterType="JobNewDealBizSearch" resultMap="jobNewDealBizPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="jobNewDealBizColumns"/>
			FROM API_JOBNEWDEALBIZ 
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							BIZ_NM LIKE '%'||#{sv}||'%'
							OR ORG_NM LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'bizNm'">
							AND BIZ_NM LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'orgNm'">
							AND ORG_NM LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY BIZ_STRT_DD DESC, SEQ ASC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectJobNewDealBizListTotal" parameterType="JobNewDealBizSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_JOBNEWDEALBIZ
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						BIZ_NM LIKE '%'||#{sv}||'%'
						OR ORG_NM LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'bizNm'">
						AND BIZ_NM LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'orgNm'">
						AND ORG_NM LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectNewDealBiz" parameterType="JobNewDealBiz" resultMap="jobNewDealBizPlainResultMap">
		SELECT
			<include refid="jobNewDealBizColumns"/>
		FROM API_JOBNEWDEALBIZ
		<where>
			SEQ = #{seq}
		</where>
	</select>
	
	<!-- =================== 서울일자리센터 교육정보  =========================-->
	<!-- =================== 서울일자리센터 교육정보  =========================-->
	<select id="selectJobEduCenterList" parameterType="JobEduCenterSearch" resultMap="jobEduCenterPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="jobEduCenterColumns"/>
			FROM API_JOBEDUCENTER
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							EDC_NM LIKE '%'||#{sv}||'%'
							OR EDC_CN LIKE '%'||#{sv}||'%'
							OR LCTRUM_INFO_CN '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'edcNm'">
							AND EDC_NM LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'edcCn'">
							AND EDC_CN LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'lctrumInfoCn'">
							AND LCTRUM_INFO_CN LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY SEQ ASC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectJobEduCenterListTotal" parameterType="JobEduCenterSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_JOBEDUCENTER
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						EDC_NM LIKE '%'||#{sv}||'%'
						OR EDC_CN LIKE '%'||#{sv}||'%'
						OR LCTRUM_INFO_CN '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'edcNm'">
						AND EDC_NM LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'edcCn'">
						AND EDC_CN LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'lctrumInfoCn'">
						AND LCTRUM_INFO_CN LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectJobEduCenter" parameterType="JobEduCenter" resultMap="jobEduCenterPlainResultMap">
		SELECT
			<include refid="jobEduCenterColumns"/>
		FROM API_JOBEDUCENTER
		<where>
			SEQ = #{seq}
		</where>
	</select>
	
	<!-- =================== 청년취업정책  =========================-->
	<!-- =================== 청년취업정책  =========================-->
	<select id="selectJynEmpSptList" parameterType="JynEmpSptSearch" resultMap="jynEmpSptPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="jynEmpSptColumns"/>
			FROM API_JYNEMPSPT
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							BUSI_NM LIKE '%'||#{sv}||'%'
							OR BUSI_TP_CD LIKE '%'||#{sv}||'%'
							OR CHARGER_ORG_NM LIKE '%'||#{sv}||'%'
							OR BUSI_SUM LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'busiNm'">
							AND BUSI_NM LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'chargerOrgNm'">
							AND CHARGER_ORG_NM LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'busiTpCd'">
							AND BUSI_TP_CD LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'busiSum'">
							AND BUSI_SUM LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY SEQ ASC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectJynEmpSptListTotal" parameterType="JynEmpSptSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_JYNEMPSPT
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						BUSI_NM LIKE '%'||#{sv}||'%'
						OR BUSI_TP_CD LIKE '%'||#{sv}||'%'
						OR CHARGER_ORG_NM LIKE '%'||#{sv}||'%'
						OR BUSI_SUM LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'busiNm'">
						AND BUSI_NM LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'chargerOrgNm'">
						AND CHARGER_ORG_NM LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'busiTpCd'">
						AND BUSI_TP_CD LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'busiSum'">
						AND BUSI_SUM LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectJynEmpSpt" parameterType="JynEmpSpt" resultMap="jynEmpSptPlainResultMap">
		SELECT
			<include refid="jynEmpSptColumns"/>
		FROM API_JYNEMPSPT
		<where>
			SEQ = #{seq}
		</where>
	</select>
	
	<!-- =================== 공공취업정보  =========================-->
	<!-- =================== 공공취업정보  =========================-->
	<select id="selectPublicEmplInfoList" parameterType="PublicEmplInfoSearch" resultMap="publicEmplInfoPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="publicEmplInfoColumns"/>
			FROM API_PUBLICEMPLINFO
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							TITLE LIKE '%'||#{sv}||'%'
							OR CONTENTS LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'title'">
							AND TITLE LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'contents'">
							AND CONTENTS LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY SEQ ASC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectPublicEmplInfoListTotal" parameterType="PublicEmplInfoSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_PUBLICEMPLINFO
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						TITLE LIKE '%'||#{sv}||'%'
						OR CONTENTS LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'title'">
						AND TITLE LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'contents'">
						AND CONTENTS LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectPublicEmplInfo" parameterType="PublicEmplInfo" resultMap="publicEmplInfoPlainResultMap">
		SELECT
			<include refid="publicEmplInfoColumns"/>
		FROM API_PUBLICEMPLINFO
		<where>
			SEQ = #{seq}
		</where>
	</select>
	
	<!-- =================== 지역별행사정보  =========================-->
	<!-- =================== 지역별행사정보  =========================-->
	<select id="selectRegionEventInfoList" parameterType="RegionEventInfoSearch" resultMap="regionEventInfoPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="regionEventInfoColumns"/>
			FROM API_REGIONEVENTINFO
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							TITLE LIKE '%'||#{sv}||'%'
							OR CONTENTS LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'title'">
							AND TITLE LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'contents'">
							AND CONTENTS LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
				<if test="startDate != null and startDate != ''">
					<![CDATA[
					AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) >= #{startDate}
					]]>	
					<if test="endDate != null and endDate != ''">
						<![CDATA[
						AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) <= #{endDate}
						]]>	
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY SEQUENCE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectRegionEventInfoListTotal" parameterType="RegionEventInfoSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_REGIONEVENTINFO
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						TITLE LIKE '%'||#{sv}||'%'
						OR CONTENTS LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'title'">
						AND TITLE LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'contents'">
						AND CONTENTS LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[
				AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) >= #{startDate}
				]]>	
				<if test="endDate != null and endDate != ''">
					<![CDATA[
					AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) <= #{endDate}
					]]>	
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectRegionEventInfo" parameterType="RegionEventInfo" resultMap="regionEventInfoPlainResultMap">
		SELECT
			<include refid="regionEventInfoColumns"/>
		FROM API_REGIONEVENTINFO
		<where>
			SEQUENCE = #{sequence}
		</where>
	</select>
	
	<!-- =================== 청년활동지원정보  =========================-->
	<!-- =================== 청년활동지원정보  =========================-->
	<select id="selectYouthActSupInfoList" parameterType="YouthActSupInfoSearch" resultMap="youthActSupInfoPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="youthActSupInfoColumns"/>
			FROM API_YOUTHACTSUPINFO
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							TITLE LIKE '%'||#{sv}||'%'
							OR CONTENTS LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'title'">
							AND TITLE LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'contents'">
							AND CONTENTS LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
				<if test="startDate != null and startDate != ''">
					<![CDATA[
					AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) >= #{startDate}
					]]>	
					<if test="endDate != null and endDate != ''">
						<![CDATA[
						AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) <= #{endDate}
						]]>	
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY SEQUENCE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectYouthActSupInfoListTotal" parameterType="YouthActSupInfoSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_YOUTHACTSUPINFO
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						TITLE LIKE '%'||#{sv}||'%'
						OR CONTENTS LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'title'">
						AND TITLE LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'contents'">
						AND CONTENTS LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[
				AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) >= #{startDate}
				]]>	
				<if test="endDate != null and endDate != ''">
					<![CDATA[
					AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) <= #{endDate}
					]]>	
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectYouthActSupInfo" parameterType="YouthActSupInfo" resultMap="youthActSupInfoPlainResultMap">
		SELECT
			<include refid="youthActSupInfoColumns"/>
		FROM API_YOUTHACTSUPINFO
		<where>
			SEQUENCE = #{sequence}
		</where>
	</select>
	
	<!-- =================== 청년 프로그램  =========================-->
	<!-- =================== 청년 프로그램  =========================-->
	<select id="selectYouthProgramList" parameterType="YouthProgramSearch" resultMap="youthProgramPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="youthProgramColumns"/>
			FROM API_YOUTHPROGRAM
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							TITLE LIKE '%'||#{sv}||'%'
							OR CONTENTS LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						<if test="sc == 'title'">
							AND TITLE LIKE '%'||#{sv}||'%'
						</if>
						<if test="sc == 'contents'">
							AND CONTENTS LIKE '%'||#{sv}||'%'
						</if>
					</if>
				</if>
				<if test="startDate != null and startDate != ''">
					<![CDATA[
					AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) >= #{startDate}
					]]>	
					<if test="endDate != null and endDate != ''">
						<![CDATA[
						AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) <= #{endDate}
						]]>	
					</if>
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY SEQUENCE DESC
			</if>
		<if test="paging">
			) Z
		)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectYouthProgramListTotal" parameterType="YouthProgramSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM API_YOUTHPROGRAM
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						TITLE LIKE '%'||#{sv}||'%'
						OR CONTENTS LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					<if test="sc == 'title'">
						AND TITLE LIKE '%'||#{sv}||'%'
					</if>
					<if test="sc == 'contents'">
						AND CONTENTS LIKE '%'||#{sv}||'%'
					</if>
				</if>
			</if>
			<if test="startDate != null and startDate != ''">
				<![CDATA[
				AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) >= #{startDate}
				]]>	
				<if test="endDate != null and endDate != ''">
					<![CDATA[
					AND SUBSTR(REPLACE(REG_DATE, '.', '-'), 1, 10) <= #{endDate}
					]]>	
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectYouthProgram" parameterType="YouthProgram" resultMap="youthProgramPlainResultMap">
		SELECT
			<include refid="youthProgramColumns"/>
		FROM API_YOUTHPROGRAM
		<where>
			SEQUENCE = #{sequence}
		</where>
	</select>
	
	
	<!-- =============================================================================================== -->
	<!-- =============================================================================================== -->
	<!-- =============================================================================================== -->
	
	<delete id="deleteApiData" parameterType="OpenApiInfo">
		DELETE FROM ${apiTableName}
	</delete>
	
	<!-- 서울 뉴딜일자리 사업정보 -->
	<insert id="insertJobNewDealBizOpenInfo" parameterType="map">
		INSERT INTO API_JOBNEWDEALBIZ (
			<include refid="jobNewDealBizColumns"/>
		) VALUES (
			#{seq}
			, #{bizNm}
			, #{upOrgNm}
			, #{orgNm}
			, #{partNm}
			, #{bizYear}
			, #{upBizNm}
			, #{bizGrpNm}
			, #{bizTypeNm}
			, #{bizTarget}
			, #{allWrkTime}
			, #{allPayAmt}
			, #{allSlctNumber}
			, #{allPlanNumber}
			, #{partWrkTime}
			, #{partPayAmt}
			, #{partSlctNumber}
			, #{partPlanNumber}
			, #{bizStrtDd}
			, #{bizEndDd}
			, #{bizSmry}
			, #{workSmry}
			, #{condSmry}
			, #{phonNoCn}
		)
	</insert>
	
	<!-- 서울일자리센터 교육정보 -->
	<insert id="insertJobEduCenterOpenInfo" parameterType="map">
		INSERT INTO API_JOBEDUCENTER (
			<include refid="jobEduCenterColumns"/>
		) VALUES (
			#{seq}
			, #{edcNm}
			, #{edcPurpsCn}
			, #{edcCn}
			, #{edcBeginDeDt}
			, #{edcEndDeDt}
			, #{edcTimeHm}
			, #{atnlcQualfCn}
			, #{lctrumInfoCn}
			, #{edcAmountAtNm}
			, #{matrlAmountAtNm}
			, #{psncpaCo}
			, #{rcritBeginDeDt}
			, #{rcritEndDeDt}
			, #{ageCoNm}
			, #{sexQualfCn}
			, #{sttusNm}
		)
	</insert>
	
	<!-- 청년취업정책 -->
	<insert id="insertJynEmpSptListAPI" parameterType="map">
		INSERT INTO API_JYNEMPSPT (
			<include refid="jynEmpSptColumns"/>
		) VALUES (
			#{seq}
			, #{busiId}
			, #{busiNm}
			, #{subBusiNm}
			, #{dtlBusiNm}
			, #{sptScale}
			, #{busiSum}
			, #{chargerOrgNm}
			, #{onlineApplPossYn}
			, #{applUrl}
			, #{busiTpCd}
			, #{detalUrl}
			, #{ageEtcCont}
			, #{edubgEtcCont}
			, #{empEtcCont}
			, #{relinfoUrl}
			, #{chargerClcd}
		)
	</insert>
	
	<!-- 공공취업정보 -->
	<insert id="insertRetrievePblinsttEmpmnInfoService" parameterType="map">
		INSERT INTO API_PUBLICEMPLINFO (
			<include refid="publicEmplInfoColumns"/>
		) VALUES (
			#{seq}
			, #{readnum}
			, #{regdate}
			, #{title}
			, #{type01}
			, #{type02}
			, #{typeinfo01}
			, #{typeinfo02}
			, #{typeinfo03}
			, #{userid}
			, #{username}
			, #{empmnsn}
			, #{contents}
			, #{deptCode}
			, #{deptName}
			, #{enddate}
			, #{link01}
			, #{link02}
			, #{link03}
			, #{moddate}
		)
	</insert>
	
	<!-- 청년활동지원정보 -->
	<insert id="insertYouth_guarantees" parameterType="map">
		INSERT INTO API_YOUTHACTSUPINFO (
			<include refid="youthActSupInfoColumns"/>
		) VALUES (
			#{sequence}
			, #{title}
			, #{contents}
			, #{fileUrl}
			, #{delYn}
			, #{regName}
			, #{regDate}
			, #{updName}
			, #{updDate}
		)
	</insert>
	
	<!-- 지역별행사정보 -->
	<insert id="insertNeighborhoods" parameterType="map">
		INSERT INTO API_REGIONEVENTINFO (
			<include refid="regionEventInfoColumns"/>
		) VALUES (
			#{sequence}
			, #{title}
			, #{contents}
			, #{fileUrl}
			, #{delYn}
			, #{regName}
			, #{regDate}
			, #{updName}
			, #{updDate}
		)
	</insert>
	
	<!-- 청년 프로그램 -->
	<insert id="insertPrograms" parameterType="map">
		INSERT INTO API_YOUTHPROGRAM (
			<include refid="youthProgramColumns"/>
		) VALUES (
			#{sequence}
			, #{supportBizCode}
			, #{title}
			, #{contents}
			, #{receptionStartDate}
			, #{receptionEndDate}
			, #{educationStartDate}
			, #{educationEndDate}
			, #{lineExplanation}
			, #{fee}
			, #{personnel}
			, #{participantNumber}
			, #{applicationLink}
			, #{fileUrl}
			, #{openYn}
			, #{delYn}
			, #{regName}
			, #{regDate}
			, #{updName}
			, #{updDate}
		)
	</insert>
</mapper>