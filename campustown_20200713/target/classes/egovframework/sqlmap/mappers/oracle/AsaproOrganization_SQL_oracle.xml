<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.asapro.organization.service.OrganizationMapper">
	
	<resultMap type="Organization" id="organizationPlainResultMap">
		<id column="ORG_ID" property="orgId" javaType="String"/>
		<result column="ORG_NAME" property="orgName" javaType="String"/>
		<result column="ORG_NAME_EN" property="orgNameEn" javaType="String"/>
		<result column="ORG_DESCRIPTION" property="orgDescription" javaType="String"/>
		<result column="ORG_USE" property="orgUse" javaType="Boolean"/>
		<result column="ORG_REGDATE" property="orgRegdate" javaType="Date"/>
		<result column="ORG_ORDER" property="orgOrder" javaType="Integer"/>
	</resultMap>
	
	<resultMap type="Department" id="departmentPlainResultMap">
		<id column="DEP_ID" property="depId" javaType="String"/>
		<result column="ORG_ID" property="orgId" javaType="String"/>
		<result column="DEP_NAME" property="depName" javaType="String"/>
		<result column="DEP_NAME_EN" property="depNameEn" javaType="String"/>
		<result column="DEP_TEL" property="depTel" javaType="String"/>
		<result column="DEP_DESCRIPTION" property="depDescription" javaType="String"/>
		<result column="DEP_USE" property="depUse" javaType="Boolean"/>
		<result column="DEP_REGDATE" property="depRegdate" javaType="Date"/>
		<result column="DEP_ORDER" property="depOrder" javaType="Integer"/>
	</resultMap>
	
	<resultMap type="Department" id="departmentComplexResultMap" extends="departmentPlainResultMap">
		<association property="organization" column="ORG_ID" javaType="Organization" resultMap="organizationPlainResultMap"/>
	</resultMap>
	
	<resultMap type="DepartmentView" id="departmentViewPlainResultMap">
		<result column="DEP_LEVEL" property="depLevel" javaType="Integer"/>
		<result column="DEP_ID" property="depId" javaType="String"/>
		<result column="DEP_NAME" property="depName" javaType="String"/>
		<result column="DEP_ORDER" property="depOrder" javaType="Integer"/>
		<result column="DEP_TEL" property="depTel" javaType="String"/>
		<result column="DEP_DESCRIPTION" property="depDescription" javaType="String"/>
		<result column="PARENT_ID" property="parentId" javaType="String"/>
		<result column="DEP_TYPE" property="depType" javaType="String"/>
	</resultMap>
<!-- 	
	<resultMap type="Staff" id="staffPlainResultMap">
		<id column="ST_IDX" property="stIdx" javaType="Integer"/>
		<result column="ST_DEP_IDX" property="stDepIdx" javaType="Integer"/>
		<result column="ST_RANK_CODE" property="stRankCode" javaType="String"/>
		<result column="ST_ORDER" property="stOrder" javaType="Integer"/>
		<result column="ST_NAME" property="stName" javaType="String"/>
		<result column="ST_WORK" property="stWork" javaType="String"/>
		<result column="ST_TEL" property="stTel" javaType="String"/>
		<result column="ST_REMARK" property="stRemark" javaType="String"/>
		<result column="ST_ACTIVE" property="stActive" javaType="Boolean"/>
	</resultMap>
 -->
 	
	<sql id="organizationPlainColumns">
		ORG_ID
		, ORG_NAME
		, ORG_NAME_EN
		, ORG_DESCRIPTION
		, ORG_USE
		, ORG_REGDATE
		, ORG_ORDER
	</sql>
	
	<sql id="organizationJoinColumns">
		ORG.ORG_ID
		, ORG.ORG_NAME
		, ORG.ORG_NAME_EN
		, ORG.ORG_DESCRIPTION
		, ORG.ORG_USE
		, ORG.ORG_REGDATE
		, ORG.ORG_ORDER
	</sql>
	
	<sql id="departmentPlainColumns">
		DEP_ID
		, ORG_ID
		, DEP_NAME
		, DEP_NAME_EN
		, DEP_TEL
		, DEP_DESCRIPTION
		, DEP_USE
		, DEP_REGDATE
		, DEP_ORDER
	</sql>
	
	<sql id="departmentJoinColumns">
		DEP.DEP_ID
		, DEP.ORG_ID AS ORG_ID2
		, DEP.DEP_NAME
		, DEP.DEP_NAME_EN
		, DEP.DEP_TEL
		, DEP.DEP_DESCRIPTION
		, DEP.DEP_USE
		, DEP.DEP_REGDATE
		, DEP.DEP_ORDER
	</sql>
	
	<sql id="departmentViewPlainColumns">
		DEP_LEVEL
		, DEP_ID
		, DEP_NAME
		, DEP_ORDER
		, DEP_TEL
		, DEP_DESCRIPTION
		, PARENT_ID
		, DEP_TYPE
	</sql>
	
	
	<sql id="staffPlainColumns">
		ST_IDX
		, ST_DEP_IDX
		, ST_ORDER
		, ST_RANK_CODE
		, ST_NAME
		, ST_WORK
		, ST_TEL
		, ST_REMARK
		, ST_ACTIVE
	</sql>
	
	
	<!-- Organization -->	
	<!-- Organization -->
	<!-- Organization -->
	<!-- Organization -->
	<!-- Organization -->
	
	<select id="selectOrganizationList" parameterType="OrganizationSearch" resultMap="organizationPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="organizationPlainColumns" />
			FROM ASA_ORG_ORGANIZATION
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							ORG_ID LIKE '%'||#{sv}||'%'
							OR ORG_NAME LIKE '%'||#{sv}||'%'
							OR ORG_NAME_EN LIKE '%'||#{sv}||'%'
							OR ORG_DESCRIPTION LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						AND ${sc} LIKE '%'||#{sv}||'%'
					</if>
				</if>
				<if test="orgUse != null and orgUse != ''">
					AND ORG_USE = #{orgUse}
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY ORG_ORDER ASC
			</if>
		<if test="paging">
				) Z
			)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectOrganizationListTotal" parameterType="OrganizationSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ASA_ORG_ORGANIZATION
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						ORG_ID LIKE '%'||#{sv}||'%'
						OR ORG_NAME LIKE '%'||#{sv}||'%'
						OR ORG_NAME_EN LIKE '%'||#{sv}||'%'
						OR ORG_DESCRIPTION LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
			</if>
			<if test="orgUse != null and orgUse != ''">
				AND ORG_USE = #{orgUse}
			</if>
		</where>
	</select>
	
	<insert id="insertOrganization" parameterType="Organization">
		INSERT INTO ASA_ORG_ORGANIZATION (
			<include refid="organizationPlainColumns"/>
		) VALUES (
			#{orgId}
			, #{orgName}
			, #{orgNameEn}
			, #{orgDescription}
			, #{orgUse}
			, #{orgRegdate}
			, #{orgOrder}
		)
	</insert>
	
	<select id="selectOrganization" parameterType="Organization" resultMap="organizationPlainResultMap">
		SELECT 
			<include refid="organizationPlainColumns"/>
		FROM ASA_ORG_ORGANIZATION
		<where>
			ORG_ID	=	#{orgId}
		</where>
	</select>
	
	<update id="updateOrganization" parameterType="Organization">
		UPDATE ASA_ORG_ORGANIZATION SET
			ORG_NAME			=	#{orgName}
			, ORG_NAME_EN		=	#{orgNameEn}
			, ORG_DESCRIPTION	=	#{orgDescription}
			, ORG_USE			=	#{orgUse}
		<where>
			ORG_ID	=	#{orgId}
		</where>
	</update>
	
	<delete id="deleteOrganization" parameterType="String">
		DELETE FROM ASA_ORG_ORGANIZATION
		<where>
			ORG_ID	=	#{value}
		</where>
	</delete>
	
	<update id="updateOrganizationOrder" parameterType="Organization">
		UPDATE ASA_ORG_ORGANIZATION SET 
		ORG_ORDER = #{orgOrder} 
		<where>
			ORG_ID = #{orgId}
		</where>
	</update>
	
	<!-- Department -->	
	<!-- Department -->
	<!-- Department -->
	<!-- Department -->
	<!-- Department -->
	
	<select id="selectDepartmentList" parameterType="DepartmentSearch" resultMap="departmentComplexResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="departmentJoinColumns" />
				, <include refid="organizationJoinColumns"/>
			FROM ASA_ORG_DEPARTMENT DEP
			LEFT OUTER JOIN ASA_ORG_ORGANIZATION ORG ON DEP.ORG_ID = ORG.ORG_ID
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							DEP.DEP_ID LIKE '%'||#{sv}||'%'
							OR DEP.DEP_NAME LIKE '%'||#{sv}||'%'
							OR DEP.DEP_NAME_EN LIKE '%'||#{sv}||'%'
							OR DEP.DEP_DESCRIPTION LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						AND ${sc} LIKE '%'||#{sv}||'%'
					</if>
				</if>
				<if test="orgId != null and orgId != ''">
					AND DEP.ORG_ID = #{orgId}
				</if>
				<if test="depUse != null and depUse != ''">
					AND DEP.DEP_USE = #{depUse}
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY DEP.ORG_ID ASC, DEP.DEP_ORDER ASC
			</if>
		<if test="paging">
				) Z
			)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectDepartmentListTotal" parameterType="DepartmentSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ASA_ORG_DEPARTMENT DEP
		LEFT OUTER JOIN ASA_ORG_ORGANIZATION ORG ON DEP.ORG_ID = ORG.ORG_ID
		<where>
			<if test="sv != null and sv != ''">
				<if test="sc == null or sc == ''">
					AND (
						DEP.DEP_ID LIKE '%'||#{sv}||'%'
						OR DEP.DEP_NAME LIKE '%'||#{sv}||'%'
						OR DEP.DEP_NAME_EN LIKE '%'||#{sv}||'%'
						OR DEP.DEP_DESCRIPTION LIKE '%'||#{sv}||'%'
					)
				</if>
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
			</if>
			<if test="orgId != null and orgId != ''">
				AND DEP.ORG_ID = #{orgId}
			</if>
			<if test="depUse != null and depUse != ''">
				AND DEP.DEP_USE = #{depUse}
			</if>
		</where>
	</select>
	
	<insert id="insertDepartment" parameterType="Department">
		<selectKey keyProperty="depId" order="BEFORE" resultType="String">
			SELECT ASA_ORGANIZATION_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ASA_ORG_DEPARTMENT (
			<include refid="departmentPlainColumns" />
		) VALUES (
			'dep'||#{depId}
			, #{organization.orgId}
			, #{depName}
			, #{depNameEn}
			, #{depTel}
			, #{depDescription}
			, #{depUse}
			, #{depRegdate}
			, ( SELECT Z.NEXT_ORDER FROM ( SELECT nvl(MAX(DEP_ORDER), 0) + 1 AS NEXT_ORDER FROM ASA_ORG_DEPARTMENT WHERE ORG_ID = #{organization.orgId} ) Z )
		)
	</insert>
	
	<select id="selectDepartment" parameterType="Department" resultMap="departmentComplexResultMap">
		SELECT
			<include refid="departmentJoinColumns" />
			, <include refid="organizationJoinColumns"/>
		FROM ASA_ORG_DEPARTMENT DEP
		LEFT OUTER JOIN ASA_ORG_ORGANIZATION ORG ON DEP.ORG_ID = ORG.ORG_ID
		<where>
			DEP.DEP_ID = #{depId}
		</where>
	</select>
	
	<update id="updateDepartment" parameterType="Department">
		UPDATE ASA_ORG_DEPARTMENT SET
			ORG_ID				= #{organization.orgId}
			, DEP_NAME			= #{depName}
			, DEP_NAME_EN		= #{depNameEn}
			, DEP_TEL			= #{depTel}
			, DEP_DESCRIPTION	= #{depDescription}
			, DEP_USE			= #{depUse}
		<where>
			DEP_ID = #{depId}
		</where>
	</update>
	
	<delete id="deleteDepartment" parameterType="String">
		DELETE FROM ASA_ORG_DEPARTMENT 
		<where>
			DEP_ID = #{value}
		</where>
	</delete>
	
	<update id="updateDepartmentOrder" parameterType="Department">
		UPDATE ASA_ORG_DEPARTMENT SET 
		DEP_ORDER = #{depOrder} 
		<where>
			DEP_ID = #{depId}
		</where>
	</update>
	
	
	<!-- VIEW 개층구조의 기관,부서,팀의 목록을 반환한다. -->
	<select id="selectDepartmentListInView" parameterType="DepartmentViewSearch" resultMap="departmentViewPlainResultMap">
		<if test="paging">
		SELECT * FROM(
			SELECT ROWNUM RN, Z.* FROM(
		</if>
			SELECT
				<include refid="departmentViewPlainColumns" />
			FROM V_ASA_DEPARTMENT DEP
			<where>
				<if test="sv != null and sv != ''">
					<if test="sc == null or sc == ''">
						AND (
							DEP.DEP_ID LIKE '%'||#{sv}||'%'
							OR DEP.DEP_NAME LIKE '%'||#{sv}||'%'
							OR DEP.DEP_DESCRIPTION LIKE '%'||#{sv}||'%'
						)
					</if>
					<if test="sc != null and sc != ''">
						AND ${sc} LIKE '%'||#{sv}||'%'
					</if>
				</if>
				<if test="parentId != null and parentId != ''">
					AND DEP.PARENT_ID = #{parentId}
				</if>
			</where>
			<if test="sortOrder != null and sortOrder != '' and sortDirection != null and sortDirection != ''">
				ORDER BY ${sortOrder} ${sortDirection}
			</if>
			<!-- <if test="sortOrder == null or sortOrder == '' or sortDirection == null or sortDirection == ''">
				ORDER BY DEP.DEP_ORDER ASC
			</if> -->
		<if test="paging">
				) Z
			)
		<where>
			RN BETWEEN #{startRow} AND #{endRow}
		</where>
		</if>
	</select>
	
	<select id="selectStartupListInView" parameterType="DepartmentViewSearch" resultMap="departmentViewPlainResultMap">
		SELECT
			<include refid="departmentViewPlainColumns" />
		FROM V_STARTUP_COM DEP
		<where>
			<if test="parentId != null and parentId != ''">
				AND DEP.PARENT_ID = #{parentId}
			</if>
		</where>
	</select>
	
	
	
	
	
	<!-- Staff -->
	<!-- Staff -->
	<!-- Staff -->
	<!-- Staff -->
	<!-- Staff -->
<!-- 	
	<insert id="insertStaff" parameterType="Staff">
		<selectKey keyProperty="stIdx" order="BEFORE" resultType="Integer">
			SELECT ECMS_COMMON_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO ECMS_ORG_STAFF (
			<include refid="staffPlainColumns" />
		) VALUES (
			#{stIdx}
			, #{stDepIdx}
			, ( SELECT Z.NEXT_ORDER FROM ( SELECT nvl(MAX(ST_ORDER), 0) + 10 AS NEXT_ORDER FROM ECMS_ORG_STAFF WHERE ST_DEP_IDX = #{stDepIdx} ) Z )
			, #{stRankCode}
			, #{stName}
			, #{stWork}
			, #{stTel}
			, #{stRemark}
			, #{stActive}
		)
	</insert>
	
	<select id="selectStaffList" parameterType="StaffSearch" resultMap="staffPlainResultMap">
		SELECT
			<include refid="staffPlainColumns" />
		FROM ECMS_ORG_STAFF STF
		JOIN ECMS_ORG_DEPARTMENT DEP ON STF.ST_DEP_IDX = DEP.DEP_IDX
		<where>
			<if test="stDepIdx != null and stDepIdx != ''">
			AND STF.ST_DEP_IDX = #{stDepIdx}
			</if>
			<if test="sv != null and sc != ''">
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
				<if test="sc == null or sc == ''">
					AND (
						ST_NAME LIKE '%'||#{sv}||'%'
						OR ST_WORK LIKE '%'||#{sv}||'%'
						OR ST_TEL LIKE '%'||#{sv}||'%'
						OR ST_REMARK LIKE '%'||#{sv}||'%'
					)
				</if>
			</if>
		</where>
		ORDER BY DEP.DEP_ORDER ASC, STF.ST_ORDER ASC
	</select>
	
	<select id="selectStaffListTotal" parameterType="StaffSearch" resultType="Integer">
		SELECT
			COUNT(*)
		FROM ECMS_ORG_STAFF STF
		JOIN ECMS_ORG_DEPARTMENT DEP ON STF.ST_DEP_IDX = DEP.DEP_IDX
		<where>
			<if test="stDepIdx != null and stDepIdx != ''">
			AND STF.ST_DEP_IDX = #{stDepIdx}
			</if>
			<if test="sv != null and sc != ''">
				<if test="sc != null and sc != ''">
					AND ${sc} LIKE '%'||#{sv}||'%'
				</if>
				<if test="sc == null or sc == ''">
					AND (
						ST_NAME LIKE '%'||#{sv}||'%'
						OR ST_WORK LIKE '%'||#{sv}||'%'
						OR ST_TEL LIKE '%'||#{sv}||'%'
						OR ST_REMARK LIKE '%'||#{sv}||'%'
					)
				</if>
			</if>
		</where>
	</select>
	
	<select id="selectStaff" parameterType="Integer" resultMap="staffPlainResultMap">
		SELECT
			<include refid="staffPlainColumns" />
		FROM ECMS_ORG_STAFF STF
		JOIN ECMS_ORG_DEPARTMENT DEP ON STF.ST_DEP_IDX = DEP.DEP_IDX
		WHERE STF.ST_IDX = #{stIdx}
	</select>
	
	<update id="updateStaff" parameterType="Staff">
		UPDATE ECMS_ORG_STAFF SET
			ST_RANK_CODE	= #{stRankCode}
			, ST_NAME		= #{stName}
			, ST_WORK		= #{stWork}
			, ST_TEL		= #{stTel}
			, ST_REMARK		= #{stRemark}
 -->
			<!-- , ST_ACTIVE -->
<!-- 			
		WHERE ST_IDX = #{stIdx}
	</update>
	
	<delete id="deleteStaff" parameterType="Integer">
		DELETE FROM ECMS_ORG_STAFF WHERE ST_IDX = #{value}
	</delete>
	
	<update id="updateStaffOrder" parameterType="Staff">
		UPDATE ECMS_ORG_STAFF SET ST_ORDER = #{stOrder} WHERE ST_IDX = #{stIdx}
	</update>
 -->	
</mapper>